{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "_nativePerRequest",
          "type": "uint96"
        },
        {
          "internalType": "uint256",
          "name": "_requestCooldown",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "AddressEmptyCode",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AddressInsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FailedInnerCall",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SafeERC20FailedOperation",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "_amountPerRequest",
          "type": "uint96"
        }
      ],
      "name": "addFaucetToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "faucetTokens",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "ERC20",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "amountPerRequest",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastRequest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfFaucetTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "removeFaucetToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "request",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "request",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestCooldown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "_amountPerRequest",
          "type": "uint96"
        }
      ],
      "name": "setAmountPerRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOperator",
          "type": "address"
        }
      ],
      "name": "setOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestCooldown",
          "type": "uint256"
        }
      ],
      "name": "setRequestCooldown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_unlockedRequest",
          "type": "bool"
        }
      ],
      "name": "setUnlockedRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockedRequest",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60806040526040516200154d3803806200154d83398101604081905262000026916200023c565b826001600160a01b0381166200005757604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b62000062816200009f565b506200006e81620000bd565b60408051808201909152600081526001600160601b0383166020820152620000969062000116565b5050506200029a565b600180546001600160a01b0319169055620000ba81620001ec565b50565b610e10811015620001115760405162461bcd60e51b815260206004820152601760248201527f556e73616665207265717565737420636f6f6c646f776e00000000000000000060448201526064016200004e565b600355565b80516001600160a01b0316600090815260076020526040902054156200017f5760405162461bcd60e51b815260206004820152601660248201527f416c726561647920612066617563657420746f6b656e0000000000000000000060448201526064016200004e565b60068054600181018255600082815283516020948501516001600160601b0316600160a01b026001600160a01b039091169081177ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90930192909255915490825260079092526040902055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000606084860312156200025257600080fd5b83516001600160a01b03811681146200026a57600080fd5b60208501519093506001600160601b03811681146200028857600080fd5b80925050604084015190509250925092565b6112a380620002aa6000396000f3fe6080604052600436106101635760003560e01c80637380f6bd116100c0578063bc3bc40411610074578063f2fde38b11610059578063f2fde38b14610395578063faf034e3146103b5578063fbedbe62146103d557600080fd5b8063bc3bc40414610357578063e30c39781461037757600080fd5b80638da5cb5b116100a55780638da5cb5b14610303578063a9860c8114610321578063b3ab15fb1461033757600080fd5b80637380f6bd146102ce57806379ba5097146102ee57600080fd5b806329954f4311610117578063570ca735116100fc578063570ca735146102545780636fb9584f1461028c578063715018a6146102b957600080fd5b806329954f4314610215578063338cdca11461023f57600080fd5b80630f737c82116101485780630f737c82146101b557806320cca627146101d557806327c78c42146101f557600080fd5b806301e336671461016f5780630d639e031461019157600080fd5b3661016a57005b600080fd5b34801561017b57600080fd5b5061018f61018a36600461109f565b61041c565b005b34801561019d57600080fd5b506006545b6040519081526020015b60405180910390f35b3480156101c157600080fd5b5061018f6101d03660046110e0565b610455565b3480156101e157600080fd5b5061018f6101f0366004611133565b61046b565b34801561020157600080fd5b5061018f610210366004611150565b610486565b34801561022157600080fd5b5060045461022f9060ff1681565b60405190151581526020016101ac565b34801561024b57600080fd5b5061018f61057f565b34801561026057600080fd5b50600254610274906001600160a01b031681565b6040516001600160a01b0390911681526020016101ac565b34801561029857600080fd5b506101a26102a7366004611150565b60056020526000908152604090205481565b3480156102c557600080fd5b5061018f6106ab565b3480156102da57600080fd5b5061018f6102e93660046110e0565b6106bf565b3480156102fa57600080fd5b5061018f6106f6565b34801561030f57600080fd5b506000546001600160a01b0316610274565b34801561032d57600080fd5b506101a260035481565b34801561034357600080fd5b5061018f610352366004611150565b610737565b34801561036357600080fd5b5061018f61037236600461116d565b610761565b34801561038357600080fd5b506001546001600160a01b0316610274565b3480156103a157600080fd5b5061018f6103b0366004611150565b610772565b3480156103c157600080fd5b5061018f6103d0366004611150565b6107e3565b3480156103e157600080fd5b506103f56103f036600461116d565b61097c565b604080516001600160a01b0390931683526001600160601b039091166020830152016101ac565b6104246109b7565b6001600160a01b0383166104415761043c82826109e4565b505050565b61043c6001600160a01b0384168383610a87565b61045d6109b7565b6104678282610aee565b5050565b6104736109b7565b6004805460ff1916911515919091179055565b6002546001600160a01b031633146104e55760405162461bcd60e51b815260206004820152600d60248201527f4f6e6c79206f70657261746f720000000000000000000000000000000000000060448201526064015b60405180910390fd5b6003546001600160a01b038216600090815260056020526040902054829161050c9161119c565b42101561055b5760405162461bcd60e51b815260206004820152601160248201527f546f6f206d616e7920726571756573747300000000000000000000000000000060448201526064016104dc565b6001600160a01b038216600090815260056020526040902042905561046782610bab565b3233146105ce5760405162461bcd60e51b815260206004820152600860248201527f4f6e6c7920454f4100000000000000000000000000000000000000000000000060448201526064016104dc565b60045460ff166106205760405162461bcd60e51b815260206004820152601860248201527f4469726563742072657175657374206973206c6f636b6564000000000000000060448201526064016104dc565b60035433600081815260056020526040902054909161063e9161119c565b42101561068d5760405162461bcd60e51b815260206004820152601160248201527f546f6f206d616e7920726571756573747300000000000000000000000000000060448201526064016104dc565b3360008181526005602052604090204290556106a890610bab565b50565b6106b36109b7565b6106bd6000610d58565b565b6106c76109b7565b6104676040518060400160405280846001600160a01b03168152602001836001600160601b0316815250610d71565b60015433906001600160a01b0316811461072e5760405163118cdaa760e01b81526001600160a01b03821660048201526024016104dc565b6106a881610d58565b61073f6109b7565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6107696109b7565b6106a881610e45565b61077a6109b7565b600180546001600160a01b0383166001600160a01b031990911681179091556107ab6000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6107eb6109b7565b6001600160a01b03811660009081526007602052604090205460028110156108555760405162461bcd60e51b815260206004820152601260248201527f4e6f7420612066617563657420746f6b656e000000000000000000000000000060448201526064016104dc565b600654600090610867906001906111af565b905080610873836111c2565b9250821461093d57600060068281548110610890576108906111d9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b031691810191909152600680549192508291859081106108e4576108e46111d9565b6000918252602091829020835193909201516001600160601b0316600160a01b026001600160a01b039093169290921791015561092283600161119c565b90516001600160a01b03166000908152600760205260409020555b60068181548110610950576109506111d9565b600091825260208083209091018290556001600160a01b03949094168152600790935250506040812055565b6006818154811061098c57600080fd5b6000918252602090912001546001600160a01b0381169150600160a01b90046001600160601b031682565b6000546001600160a01b031633146106bd5760405163118cdaa760e01b81523360048201526024016104dc565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610a31576040519150601f19603f3d011682016040523d82523d6000602084013e610a36565b606091505b505090508061043c5760405162461bcd60e51b815260206004820152601660248201527f4e4154495645207472616e73666572206661696c65640000000000000000000060448201526064016104dc565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b17905261043c908490610e9c565b6001600160a01b03821660009081526007602052604081205490819003610b575760405162461bcd60e51b815260206004820152601260248201527f4e6f7420612066617563657420746f6b656e000000000000000000000000000060448201526064016104dc565b816006610b656001846111af565b81548110610b7557610b756111d9565b9060005260206000200160000160146101000a8154816001600160601b0302191690836001600160601b03160217905550505050565b60068054906000908183610bc157610bc16111d9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101829052915015801590610c18575080602001516001600160601b03164710155b15610c3457610c348382602001516001600160601b03166109e4565b60015b82811015610d525760068181548110610c5257610c526111d9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101829052925015801590610d165750602082015182516040516370a0823160e01b81523060048201526001600160601b03909216916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610cef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1391906111ef565b10155b15610d425760208201518251610d42916001600160a01b039091169086906001600160601b0316610a87565b610d4b81611208565b9050610c37565b50505050565b600180546001600160a01b03191690556106a881610eff565b80516001600160a01b031660009081526007602052604090205415610dd85760405162461bcd60e51b815260206004820152601660248201527f416c726561647920612066617563657420746f6b656e0000000000000000000060448201526064016104dc565b60068054600181018255600082815283516020948501516001600160601b0316600160a01b026001600160a01b039091169081177ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90930192909255915490825260079092526040902055565b610e10811015610e975760405162461bcd60e51b815260206004820152601760248201527f556e73616665207265717565737420636f6f6c646f776e00000000000000000060448201526064016104dc565b600355565b6000610eb16001600160a01b03841683610f4f565b90508051600014158015610ed6575080806020019051810190610ed49190611221565b155b1561043c57604051635274afe760e01b81526001600160a01b03841660048201526024016104dc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6060610f5d83836000610f66565b90505b92915050565b606081471015610f8b5760405163cd78605960e01b81523060048201526024016104dc565b600080856001600160a01b03168486604051610fa7919061123e565b60006040518083038185875af1925050503d8060008114610fe4576040519150601f19603f3d011682016040523d82523d6000602084013e610fe9565b606091505b5091509150610ff9868383611005565b925050505b9392505050565b60608261101a5761101582611061565b610ffe565b815115801561103157506001600160a01b0384163b155b1561105a57604051639996b31560e01b81526001600160a01b03851660048201526024016104dc565b5080610ffe565b8051156110715780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6001600160a01b03811681146106a857600080fd5b6000806000606084860312156110b457600080fd5b83356110bf8161108a565b925060208401356110cf8161108a565b929592945050506040919091013590565b600080604083850312156110f357600080fd5b82356110fe8161108a565b915060208301356001600160601b038116811461111a57600080fd5b809150509250929050565b80151581146106a857600080fd5b60006020828403121561114557600080fd5b8135610ffe81611125565b60006020828403121561116257600080fd5b8135610ffe8161108a565b60006020828403121561117f57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610f6057610f60611186565b81810381811115610f6057610f60611186565b6000816111d1576111d1611186565b506000190190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561120157600080fd5b5051919050565b60006001820161121a5761121a611186565b5060010190565b60006020828403121561123357600080fd5b8151610ffe81611125565b6000825160005b8181101561125f5760208186018101518583015201611245565b50600092019182525091905056fea2646970667358221220a2ed0a50dc84943f510092e0176197f6463e4f64edf17285e23c42d1f122a6af64736f6c63430008140033",
    "sourceMap": "704:7958:148:-:0;;;2124:294;;;;;;;;;;;;;;;;;;:::i;:::-;2242:12;-1:-1:-1;;;;;1273:26:31;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:31;;1350:1;1322:31;;;689:51:152;662:18;;1322:31:31;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;2270:37:148::1;2290:16:::0;2270:19:::1;:37::i;:::-;2333:77;::::0;;;;::::1;::::0;;;-1:-1:-1;2333:77:148;;-1:-1:-1;;;;;2333:77:148;::::1;;::::0;::::1;::::0;2317:94:::1;::::0;:15:::1;:94::i;:::-;2124:294:::0;;;704:7958;;1886:153:32;1975:13;1968:20;;-1:-1:-1;;;;;;1968:20:32;;;1998:34;2023:8;1998:24;:34::i;:::-;1886:153;:::o;7658:188:148:-;7759:7;7739:16;:27;;7731:63;;;;-1:-1:-1;;;7731:63:148;;953:2:152;7731:63:148;;;935:21:152;992:2;972:18;;;965:30;1031:25;1011:18;;;1004:53;1074:18;;7731:63:148;751:347:152;7731:63:148;7805:15;:34;7658:188::o;7223:241::-;7316:12;;-1:-1:-1;;;;;7301:28:148;;;;;:14;:28;;;;;;:33;7293:68;;;;-1:-1:-1;;;7293:68:148;;1305:2:152;7293:68:148;;;1287:21:152;1344:2;1324:18;;;1317:30;1383:24;1363:18;;;1356:52;1425:18;;7293:68:148;1103:346:152;7293:68:148;7372:12;:25;;;;;;;-1:-1:-1;7372:25:148;;;;;;;;;;-1:-1:-1;;;;;7372:25:148;-1:-1:-1;;;7372:25:148;-1:-1:-1;;;;;7372:25:148;;;;;;;;;;;;;;7438:19;;7407:28;;;:14;:28;;;;;;:50;7223:241::o;2912:187:31:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:31;;;-1:-1:-1;;;;;;3020:17:31;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:524:152:-;101:6;109;117;170:2;158:9;149:7;145:23;141:32;138:52;;;186:1;183;176:12;138:52;212:16;;-1:-1:-1;;;;;257:31:152;;247:42;;237:70;;303:1;300;293:12;237:70;376:2;361:18;;355:25;326:5;;-1:-1:-1;;;;;;411:32:152;;399:45;;389:73;;458:1;455;448:12;389:73;481:7;471:17;;;528:2;517:9;513:18;507:25;497:35;;14:524;;;;;:::o;1103:346::-;704:7958:148;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101635760003560e01c80637380f6bd116100c0578063bc3bc40411610074578063f2fde38b11610059578063f2fde38b14610395578063faf034e3146103b5578063fbedbe62146103d557600080fd5b8063bc3bc40414610357578063e30c39781461037757600080fd5b80638da5cb5b116100a55780638da5cb5b14610303578063a9860c8114610321578063b3ab15fb1461033757600080fd5b80637380f6bd146102ce57806379ba5097146102ee57600080fd5b806329954f4311610117578063570ca735116100fc578063570ca735146102545780636fb9584f1461028c578063715018a6146102b957600080fd5b806329954f4314610215578063338cdca11461023f57600080fd5b80630f737c82116101485780630f737c82146101b557806320cca627146101d557806327c78c42146101f557600080fd5b806301e336671461016f5780630d639e031461019157600080fd5b3661016a57005b600080fd5b34801561017b57600080fd5b5061018f61018a36600461109f565b61041c565b005b34801561019d57600080fd5b506006545b6040519081526020015b60405180910390f35b3480156101c157600080fd5b5061018f6101d03660046110e0565b610455565b3480156101e157600080fd5b5061018f6101f0366004611133565b61046b565b34801561020157600080fd5b5061018f610210366004611150565b610486565b34801561022157600080fd5b5060045461022f9060ff1681565b60405190151581526020016101ac565b34801561024b57600080fd5b5061018f61057f565b34801561026057600080fd5b50600254610274906001600160a01b031681565b6040516001600160a01b0390911681526020016101ac565b34801561029857600080fd5b506101a26102a7366004611150565b60056020526000908152604090205481565b3480156102c557600080fd5b5061018f6106ab565b3480156102da57600080fd5b5061018f6102e93660046110e0565b6106bf565b3480156102fa57600080fd5b5061018f6106f6565b34801561030f57600080fd5b506000546001600160a01b0316610274565b34801561032d57600080fd5b506101a260035481565b34801561034357600080fd5b5061018f610352366004611150565b610737565b34801561036357600080fd5b5061018f61037236600461116d565b610761565b34801561038357600080fd5b506001546001600160a01b0316610274565b3480156103a157600080fd5b5061018f6103b0366004611150565b610772565b3480156103c157600080fd5b5061018f6103d0366004611150565b6107e3565b3480156103e157600080fd5b506103f56103f036600461116d565b61097c565b604080516001600160a01b0390931683526001600160601b039091166020830152016101ac565b6104246109b7565b6001600160a01b0383166104415761043c82826109e4565b505050565b61043c6001600160a01b0384168383610a87565b61045d6109b7565b6104678282610aee565b5050565b6104736109b7565b6004805460ff1916911515919091179055565b6002546001600160a01b031633146104e55760405162461bcd60e51b815260206004820152600d60248201527f4f6e6c79206f70657261746f720000000000000000000000000000000000000060448201526064015b60405180910390fd5b6003546001600160a01b038216600090815260056020526040902054829161050c9161119c565b42101561055b5760405162461bcd60e51b815260206004820152601160248201527f546f6f206d616e7920726571756573747300000000000000000000000000000060448201526064016104dc565b6001600160a01b038216600090815260056020526040902042905561046782610bab565b3233146105ce5760405162461bcd60e51b815260206004820152600860248201527f4f6e6c7920454f4100000000000000000000000000000000000000000000000060448201526064016104dc565b60045460ff166106205760405162461bcd60e51b815260206004820152601860248201527f4469726563742072657175657374206973206c6f636b6564000000000000000060448201526064016104dc565b60035433600081815260056020526040902054909161063e9161119c565b42101561068d5760405162461bcd60e51b815260206004820152601160248201527f546f6f206d616e7920726571756573747300000000000000000000000000000060448201526064016104dc565b3360008181526005602052604090204290556106a890610bab565b50565b6106b36109b7565b6106bd6000610d58565b565b6106c76109b7565b6104676040518060400160405280846001600160a01b03168152602001836001600160601b0316815250610d71565b60015433906001600160a01b0316811461072e5760405163118cdaa760e01b81526001600160a01b03821660048201526024016104dc565b6106a881610d58565b61073f6109b7565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6107696109b7565b6106a881610e45565b61077a6109b7565b600180546001600160a01b0383166001600160a01b031990911681179091556107ab6000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6107eb6109b7565b6001600160a01b03811660009081526007602052604090205460028110156108555760405162461bcd60e51b815260206004820152601260248201527f4e6f7420612066617563657420746f6b656e000000000000000000000000000060448201526064016104dc565b600654600090610867906001906111af565b905080610873836111c2565b9250821461093d57600060068281548110610890576108906111d9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b031691810191909152600680549192508291859081106108e4576108e46111d9565b6000918252602091829020835193909201516001600160601b0316600160a01b026001600160a01b039093169290921791015561092283600161119c565b90516001600160a01b03166000908152600760205260409020555b60068181548110610950576109506111d9565b600091825260208083209091018290556001600160a01b03949094168152600790935250506040812055565b6006818154811061098c57600080fd5b6000918252602090912001546001600160a01b0381169150600160a01b90046001600160601b031682565b6000546001600160a01b031633146106bd5760405163118cdaa760e01b81523360048201526024016104dc565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610a31576040519150601f19603f3d011682016040523d82523d6000602084013e610a36565b606091505b505090508061043c5760405162461bcd60e51b815260206004820152601660248201527f4e4154495645207472616e73666572206661696c65640000000000000000000060448201526064016104dc565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b17905261043c908490610e9c565b6001600160a01b03821660009081526007602052604081205490819003610b575760405162461bcd60e51b815260206004820152601260248201527f4e6f7420612066617563657420746f6b656e000000000000000000000000000060448201526064016104dc565b816006610b656001846111af565b81548110610b7557610b756111d9565b9060005260206000200160000160146101000a8154816001600160601b0302191690836001600160601b03160217905550505050565b60068054906000908183610bc157610bc16111d9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101829052915015801590610c18575080602001516001600160601b03164710155b15610c3457610c348382602001516001600160601b03166109e4565b60015b82811015610d525760068181548110610c5257610c526111d9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101829052925015801590610d165750602082015182516040516370a0823160e01b81523060048201526001600160601b03909216916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610cef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1391906111ef565b10155b15610d425760208201518251610d42916001600160a01b039091169086906001600160601b0316610a87565b610d4b81611208565b9050610c37565b50505050565b600180546001600160a01b03191690556106a881610eff565b80516001600160a01b031660009081526007602052604090205415610dd85760405162461bcd60e51b815260206004820152601660248201527f416c726561647920612066617563657420746f6b656e0000000000000000000060448201526064016104dc565b60068054600181018255600082815283516020948501516001600160601b0316600160a01b026001600160a01b039091169081177ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90930192909255915490825260079092526040902055565b610e10811015610e975760405162461bcd60e51b815260206004820152601760248201527f556e73616665207265717565737420636f6f6c646f776e00000000000000000060448201526064016104dc565b600355565b6000610eb16001600160a01b03841683610f4f565b90508051600014158015610ed6575080806020019051810190610ed49190611221565b155b1561043c57604051635274afe760e01b81526001600160a01b03841660048201526024016104dc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6060610f5d83836000610f66565b90505b92915050565b606081471015610f8b5760405163cd78605960e01b81523060048201526024016104dc565b600080856001600160a01b03168486604051610fa7919061123e565b60006040518083038185875af1925050503d8060008114610fe4576040519150601f19603f3d011682016040523d82523d6000602084013e610fe9565b606091505b5091509150610ff9868383611005565b925050505b9392505050565b60608261101a5761101582611061565b610ffe565b815115801561103157506001600160a01b0384163b155b1561105a57604051639996b31560e01b81526001600160a01b03851660048201526024016104dc565b5080610ffe565b8051156110715780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6001600160a01b03811681146106a857600080fd5b6000806000606084860312156110b457600080fd5b83356110bf8161108a565b925060208401356110cf8161108a565b929592945050506040919091013590565b600080604083850312156110f357600080fd5b82356110fe8161108a565b915060208301356001600160601b038116811461111a57600080fd5b809150509250929050565b80151581146106a857600080fd5b60006020828403121561114557600080fd5b8135610ffe81611125565b60006020828403121561116257600080fd5b8135610ffe8161108a565b60006020828403121561117f57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610f6057610f60611186565b81810381811115610f6057610f60611186565b6000816111d1576111d1611186565b506000190190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561120157600080fd5b5051919050565b60006001820161121a5761121a611186565b5060010190565b60006020828403121561123357600080fd5b8151610ffe81611125565b6000825160005b8181101561125f5760208186018101518583015201611245565b50600092019182525091905056fea2646970667358221220a2ed0a50dc84943f510092e0176197f6463e4f64edf17285e23c42d1f122a6af64736f6c63430008140033",
    "sourceMap": "704:7958:148:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5545:212;;;;;;;;;;-1:-1:-1;5545:212:148;;;;;:::i;:::-;;:::i;:::-;;2574:107;;;;;;;;;;-1:-1:-1;2655:12:148;:19;2574:107;;;820:25:152;;;808:2;793:18;2574:107:148;;;;;;;;5120:153;;;;;;;;;;-1:-1:-1;5120:153:148;;;;;:::i;:::-;;:::i;6109:121::-;;;;;;;;;;-1:-1:-1;6109:121:148;;;;;:::i;:::-;;:::i;3301:146::-;;;;;;;;;;-1:-1:-1;3301:146:148;;;;;:::i;:::-;;:::i;1137:27::-;;;;;;;;;;-1:-1:-1;1137:27:148;;;;;;;;;;;2114:14:152;;2107:22;2089:41;;2077:2;2062:18;1137:27:148;1949:187:152;2846:169:148;;;;;;;;;;;;;:::i;1011:23::-;;;;;;;;;;-1:-1:-1;1011:23:148;;;;-1:-1:-1;;;;;1011:23:148;;;;;;-1:-1:-1;;;;;2305:55:152;;;2287:74;;2275:2;2260:18;1011:23:148;2141:226:152;1225:46:148;;;;;;;;;;-1:-1:-1;1225:46:148;;;;;:::i;:::-;;;;;;;;;;;;;;2293:101:31;;;;;;;;;;;;;:::i;3681:183:148:-;;;;;;;;;;-1:-1:-1;3681:183:148;;;;;:::i;:::-;;:::i;2119:229:32:-;;;;;;;;;;;;;:::i;1638:85:31:-;;;;;;;;;;-1:-1:-1;1684:7:31;1710:6;-1:-1:-1;;;;;1710:6:31;1638:85;;1100:30:148;;;;;;;;;;;;;;;;5871:102;;;;;;;;;;-1:-1:-1;5871:102:148;;;;;:::i;:::-;;:::i;4732:127::-;;;;;;;;;;-1:-1:-1;4732:127:148;;;;;:::i;:::-;;:::i;1232:99:32:-;;;;;;;;;;-1:-1:-1;1311:13:32;;-1:-1:-1;;;;;1311:13:32;1232:99;;1524:178;;;;;;;;;;-1:-1:-1;1524:178:32;;;;;:::i;:::-;;:::i;4035:526:148:-;;;;;;;;;;-1:-1:-1;4035:526:148;;;;;:::i;:::-;;:::i;1349:33::-;;;;;;;;;;-1:-1:-1;1349:33:148;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;3039:55:152;;;3021:74;;-1:-1:-1;;;;;3131:39:152;;;3126:2;3111:18;;3104:67;2994:18;1349:33:148;2833:344:152;5545:212:148;1531:13:31;:11;:13::i;:::-;-1:-1:-1;;;;;5646:29:148;::::1;5642:108;;5677:25;5689:3;5694:7;5677:11;:25::i;:::-;5545:212:::0;;;:::o;5642:108::-:1;5717:33;-1:-1:-1::0;;;;;5717:19:148;::::1;5737:3:::0;5742:7;5717:19:::1;:33::i;5120:153::-:0;1531:13:31;:11;:13::i;:::-;5219:47:148::1;5240:6;5248:17;5219:20;:47::i;:::-;5120:153:::0;;:::o;6109:121::-;1531:13:31;:11;:13::i;:::-;6189:15:148::1;:34:::0;;-1:-1:-1;;6189:34:148::1;::::0;::::1;;::::0;;;::::1;::::0;;6109:121::o;3301:146::-;1492:8;;-1:-1:-1;;;;;1492:8:148;1478:10;:22;1470:48;;;;-1:-1:-1;;;1470:48:148;;3384:2:152;1470:48:148;;;3366:21:152;3423:2;3403:18;;;3396:30;3462:15;3442:18;;;3435:43;3495:18;;1470:48:148;;;;;;;;;1636:15:::1;::::0;-1:-1:-1;;;;;1616:17:148;::::1;;::::0;;;:11:::1;:17;::::0;;;;;3367:3;;1616:35:::1;::::0;::::1;:::i;:::-;1597:15;:54;;1589:84;;;::::0;-1:-1:-1;;;1589:84:148;;3988:2:152;1589:84:148::1;::::0;::::1;3970:21:152::0;4027:2;4007:18;;;4000:30;4066:19;4046:18;;;4039:47;4103:18;;1589:84:148::1;3786:341:152::0;1589:84:148::1;-1:-1:-1::0;;;;;3382:16:148;::::2;;::::0;;;:11:::2;:16;::::0;;;;3401:15:::2;3382:34:::0;;3427:13:::2;3394:3:::0;3427:8:::2;:13::i;2846:169::-:0;1734:9;1747:10;1734:23;1726:44;;;;-1:-1:-1;;;1726:44:148;;4334:2:152;1726:44:148;;;4316:21:152;4373:1;4353:18;;;4346:29;4411:10;4391:18;;;4384:38;4439:18;;1726:44:148;4132:331:152;1726:44:148;1841:15:::1;::::0;::::1;;1833:52;;;::::0;-1:-1:-1;;;1833:52:148;;4670:2:152;1833:52:148::1;::::0;::::1;4652:21:152::0;4709:2;4689:18;;;4682:30;4748:26;4728:18;;;4721:54;4792:18;;1833:52:148::1;4468:348:152::0;1833:52:148::1;1636:15:::2;::::0;2914:10:::2;1616:17;::::0;;;:11:::2;:17;::::0;;;;;2914:10;;1616:35:::2;::::0;::::2;:::i;:::-;1597:15;:54;;1589:84;;;::::0;-1:-1:-1;;;1589:84:148;;3988:2:152;1589:84:148::2;::::0;::::2;3970:21:152::0;4027:2;4007:18;;;4000:30;4066:19;4046:18;;;4039:47;4103:18;;1589:84:148::2;3786:341:152::0;1589:84:148::2;2948:10:::3;2936:23;::::0;;;:11:::3;:23;::::0;;;;2962:15:::3;2936:41:::0;;2988:20:::3;::::0;:8:::3;:20::i;:::-;1895:1:::2;2846:169::o:0;2293:101:31:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3681:183:148:-;1531:13:31;:11;:13::i;:::-;3775:82:148::1;3791:65;;;;;;;;3811:6;-1:-1:-1::0;;;;;3791:65:148::1;;;;;3837:17;-1:-1:-1::0;;;;;3791:65:148::1;;;::::0;3775:15:::1;:82::i;2119:229:32:-:0;1311:13;;735:10:52;;-1:-1:-1;;;;;1311:13:32;2214:24;;2210:96;;2261:34;;-1:-1:-1;;;2261:34:32;;-1:-1:-1;;;;;2305:55:152;;2261:34:32;;;2287:74:152;2260:18;;2261:34:32;2141:226:152;2210:96:32;2315:26;2334:6;2315:18;:26::i;5871:102:148:-;1531:13:31;:11;:13::i;:::-;5943:8:148::1;:23:::0;;-1:-1:-1;;;;;;5943:23:148::1;-1:-1:-1::0;;;;;5943:23:148;;;::::1;::::0;;;::::1;::::0;;5871:102::o;4732:127::-;1531:13:31;:11;:13::i;:::-;4815:37:148::1;4835:16;4815:19;:37::i;1524:178:32:-:0;1531:13:31;:11;:13::i;:::-;1613::32::1;:24:::0;;-1:-1:-1;;;;;1613:24:32;::::1;-1:-1:-1::0;;;;;;1613:24:32;;::::1;::::0;::::1;::::0;;;1677:7:::1;1684::31::0;1710:6;-1:-1:-1;;;;;1710:6:31;;1638:85;1677:7:32::1;-1:-1:-1::0;;;;;1652:43:32::1;;;;;;;;;;;1524:178:::0;:::o;4035:526:148:-;1531:13:31;:11;:13::i;:::-;-1:-1:-1;;;;;4122:22:148;::::1;4106:13;4122:22:::0;;;:14:::1;:22;::::0;;;;;4172:1:::1;4163:10:::0;::::1;;4155:41;;;::::0;-1:-1:-1;;;4155:41:148;;5023:2:152;4155:41:148::1;::::0;::::1;5005:21:152::0;5062:2;5042:18;;;5035:30;5101:20;5081:18;;;5074:48;5139:18;;4155:41:148::1;4821:342:152::0;4155:41:148::1;4227:12;:19:::0;4207:17:::1;::::0;4227:23:::1;::::0;4249:1:::1;::::0;4227:23:::1;:::i;:::-;4207:43:::0;-1:-1:-1;4207:43:148;4264:7:::1;::::0;::::1;:::i;:::-;;;;:20;4260:215;;4300:30;4333:12;4346:9;4333:23;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;4300:56:::1;::::0;;;;::::1;::::0;;;4333:23;::::1;4300:56:::0;-1:-1:-1;;;;;4300:56:148;::::1;::::0;;-1:-1:-1;;;4300:56:148;::::1;-1:-1:-1::0;;;;;4300:56:148::1;::::0;;::::1;::::0;;;;4371:12:::1;:19:::0;;4300:56;;-1:-1:-1;4300:56:148;;4384:5;;4371:19;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;:33;;;;;::::1;::::0;-1:-1:-1;;;;;4371:33:148::1;-1:-1:-1::0;;;4371:33:148::1;-1:-1:-1::0;;;;;4371:33:148;;::::1;::::0;;;::::1;:19:::0;::::1;:33:::0;4455:9:::1;:5:::0;4371:33;4455:9:::1;:::i;:::-;4434:17:::0;;-1:-1:-1;;;;;4419:33:148::1;;::::0;;;:14:::1;:33;::::0;;;;:45;4260:215:::1;4492:12;4505:9;4492:23;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;4485:30:::0;;;-1:-1:-1;;;;;4532:22:148;;;::::1;::::0;;:14:::1;:22:::0;;;-1:-1:-1;;4532:22:148;;;4525:29;4035:526::o;1349:33::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1349:33:148;;;-1:-1:-1;;;;1349:33:148;;-1:-1:-1;;;;;1349:33:148;;:::o;1796:162:31:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:31;735:10:52;1855:23:31;1851:101;;1901:40;;-1:-1:-1;;;1901:40:31;;735:10:52;1901:40:31;;;2287:74:152;2260:18;;1901:40:31;2141:226:152;8486:174:148;8556:12;8573:3;-1:-1:-1;;;;;8573:8:148;8589:7;8573:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8555:46;;;8619:7;8611:42;;;;-1:-1:-1;;;8611:42:148;;5986:2:152;8611:42:148;;;5968:21:152;6025:2;6005:18;;;5998:30;6064:24;6044:18;;;6037:52;6106:18;;8611:42:148;5784:346:152;1303:160:50;1412:43;;;-1:-1:-1;;;;;6327:55:152;;1412:43:50;;;6309:74:152;6399:18;;;;6392:34;;;1412:43:50;;;;;;;;;;6282:18:152;;;;1412:43:50;;;;;;;;;;-1:-1:-1;;;1412:43:50;;;1385:71;;1405:5;;1385:19;:71::i;8068:257:148:-;-1:-1:-1;;;;;8173:22:148;;8157:13;8173:22;;;:14;:22;;;;;;;8214:10;;;8206:41;;;;-1:-1:-1;;;8206:41:148;;5023:2:152;8206:41:148;;;5005:21:152;5062:2;5042:18;;;5035:30;5101:20;5081:18;;;5074:48;5139:18;;8206:41:148;4821:342:152;8206:41:148;8301:17;8258:12;8271:9;8279:1;8271:5;:9;:::i;:::-;8258:23;;;;;;;;:::i;:::-;;;;;;;;:40;;;:60;;;;;-1:-1:-1;;;;;8258:60:148;;;;;-1:-1:-1;;;;;8258:60:148;;;;;;8147:178;8068:257;;:::o;6437:590::-;6500:12;:19;;;6486:11;;;6557:15;;;;;:::i;:::-;;;;;;;;;;6530:42;;;;;;;;;6557:15;;6530:42;-1:-1:-1;;;;;6530:42:148;;;;-1:-1:-1;;;6530:42:148;;-1:-1:-1;;;;;6530:42:148;;;;;;;;-1:-1:-1;6587:26:148;;;;:77;;;6642:5;:22;;;-1:-1:-1;;;;;6617:47:148;:21;:47;;6587:77;6583:148;;;6680:40;6692:3;6697:5;:22;;;-1:-1:-1;;;;;6680:40:148;:11;:40::i;:::-;6758:1;6741:280;6765:3;6761:1;:7;6741:280;;;6797:12;6810:1;6797:15;;;;;;;;:::i;:::-;;;;;;;;;;6789:23;;;;;;;;;6797:15;;6789:23;-1:-1:-1;;;;;6789:23:148;;;;-1:-1:-1;;;6789:23:148;;-1:-1:-1;;;;;6789:23:148;;;;;;;;-1:-1:-1;6831:26:148;;;;:92;;-1:-1:-1;6901:22:148;;;;6861:11;;:36;;-1:-1:-1;;;6861:36:148;;6891:4;6861:36;;;2287:74:152;-1:-1:-1;;;;;6861:62:148;;;;-1:-1:-1;;;;;6861:21:148;;;;;;2260:18:152;;6861:36:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:62;;6831:92;6827:184;;;6973:22;;;;6943:11;;:53;;-1:-1:-1;;;;;6943:24:148;;;;6968:3;;-1:-1:-1;;;;;6943:53:148;:24;:53::i;:::-;6770:3;;;:::i;:::-;;;6741:280;;;;6476:551;;6437:590;:::o;1886:153:32:-;1975:13;1968:20;;-1:-1:-1;;;;;;1968:20:32;;;1998:34;2023:8;1998:24;:34::i;7223:241:148:-;7316:12;;-1:-1:-1;;;;;7301:28:148;;;;;:14;:28;;;;;;:33;7293:68;;;;-1:-1:-1;;;7293:68:148;;6968:2:152;7293:68:148;;;6950:21:152;7007:2;6987:18;;;6980:30;7046:24;7026:18;;;7019:52;7088:18;;7293:68:148;6766:346:152;7293:68:148;7372:12;:25;;;;;;;-1:-1:-1;7372:25:148;;;;;;;;;;-1:-1:-1;;;;;7372:25:148;-1:-1:-1;;;7372:25:148;-1:-1:-1;;;;;7372:25:148;;;;;;;;;;;;;;7438:19;;7407:28;;;:14;:28;;;;;;:50;7223:241::o;7658:188::-;7759:7;7739:16;:27;;7731:63;;;;-1:-1:-1;;;7731:63:148;;7319:2:152;7731:63:148;;;7301:21:152;7358:2;7338:18;;;7331:30;7397:25;7377:18;;;7370:53;7440:18;;7731:63:148;7117:347:152;7731:63:148;7805:15;:34;7658:188::o;6468:629:50:-;6887:23;6913:33;-1:-1:-1;;;;;6913:27:50;;6941:4;6913:27;:33::i;:::-;6887:59;;6960:10;:17;6981:1;6960:22;;:57;;;;;6998:10;6987:30;;;;;;;;;;;;:::i;:::-;6986:31;6960:57;6956:135;;;7040:40;;-1:-1:-1;;;7040:40:50;;-1:-1:-1;;;;;2305:55:152;;7040:40:50;;;2287:74:152;2260:18;;7040:40:50;2141:226:152;2912:187:31;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:31;;;-1:-1:-1;;;;;;3020:17:31;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;2705:151:51:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3359:41;;-1:-1:-1;;;3359:41:51;;3394:4;3359:41;;;2287:74:152;2260:18;;3359:41:51;2141:226:152;3303:108:51;3421:12;3435:23;3462:6;-1:-1:-1;;;;;3462:11:51;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:51;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:51;;-1:-1:-1;;;;;2305:55:152;;5121:24:51;;;2287:74:152;2260:18;;5121:24:51;2141:226:152;5041:119:51;-1:-1:-1;5180:10:51;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:51;;;;;;;;;;;14:162:152;-1:-1:-1;;;;;101:5:152;97:54;90:5;87:65;77:93;;166:1;163;156:12;181:488;274:6;282;290;343:2;331:9;322:7;318:23;314:32;311:52;;;359:1;356;349:12;311:52;398:9;385:23;417:39;450:5;417:39;:::i;:::-;475:5;-1:-1:-1;532:2:152;517:18;;504:32;545:41;504:32;545:41;:::i;:::-;181:488;;605:7;;-1:-1:-1;;;659:2:152;644:18;;;;631:32;;181:488::o;856:459::-;939:6;947;1000:2;988:9;979:7;975:23;971:32;968:52;;;1016:1;1013;1006:12;968:52;1055:9;1042:23;1074:39;1107:5;1074:39;:::i;:::-;1132:5;-1:-1:-1;1189:2:152;1174:18;;1161:32;-1:-1:-1;;;;;1224:40:152;;1212:53;;1202:81;;1279:1;1276;1269:12;1202:81;1302:7;1292:17;;;856:459;;;;;:::o;1320:118::-;1406:5;1399:13;1392:21;1385:5;1382:32;1372:60;;1428:1;1425;1418:12;1443:241;1499:6;1552:2;1540:9;1531:7;1527:23;1523:32;1520:52;;;1568:1;1565;1558:12;1520:52;1607:9;1594:23;1626:28;1648:5;1626:28;:::i;1689:255::-;1748:6;1801:2;1789:9;1780:7;1776:23;1772:32;1769:52;;;1817:1;1814;1807:12;1769:52;1856:9;1843:23;1875:39;1908:5;1875:39;:::i;2372:180::-;2431:6;2484:2;2472:9;2463:7;2459:23;2455:32;2452:52;;;2500:1;2497;2490:12;2452:52;-1:-1:-1;2523:23:152;;2372:180;-1:-1:-1;2372:180:152:o;3524:127::-;3585:10;3580:3;3576:20;3573:1;3566:31;3616:4;3613:1;3606:15;3640:4;3637:1;3630:15;3656:125;3721:9;;;3742:10;;;3739:36;;;3755:18;;:::i;5168:128::-;5235:9;;;5256:11;;;5253:37;;;5270:18;;:::i;5301:136::-;5340:3;5368:5;5358:39;;5377:18;;:::i;:::-;-1:-1:-1;;;5413:18:152;;5301:136::o;5442:127::-;5503:10;5498:3;5494:20;5491:1;5484:31;5534:4;5531:1;5524:15;5558:4;5555:1;5548:15;6437:184;6507:6;6560:2;6548:9;6539:7;6535:23;6531:32;6528:52;;;6576:1;6573;6566:12;6528:52;-1:-1:-1;6599:16:152;;6437:184;-1:-1:-1;6437:184:152:o;6626:135::-;6665:3;6686:17;;;6683:43;;6706:18;;:::i;:::-;-1:-1:-1;6753:1:152;6742:13;;6626:135::o;7469:245::-;7536:6;7589:2;7577:9;7568:7;7564:23;7560:32;7557:52;;;7605:1;7602;7595:12;7557:52;7637:9;7631:16;7656:28;7678:5;7656:28;:::i;7719:412::-;7848:3;7886:6;7880:13;7911:1;7921:129;7935:6;7932:1;7929:13;7921:129;;;8033:4;8017:14;;;8013:25;;8007:32;7994:11;;;7987:53;7950:12;7921:129;;;-1:-1:-1;8105:1:152;8069:16;;8094:13;;;-1:-1:-1;8069:16:152;7719:412;-1:-1:-1;7719:412:152:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "addFaucetToken(address,uint96)": "7380f6bd",
    "faucetTokens(uint256)": "fbedbe62",
    "lastRequest(address)": "6fb9584f",
    "numberOfFaucetTokens()": "0d639e03",
    "operator()": "570ca735",
    "owner()": "8da5cb5b",
    "pendingOwner()": "e30c3978",
    "removeFaucetToken(address)": "faf034e3",
    "renounceOwnership()": "715018a6",
    "request()": "338cdca1",
    "request(address)": "27c78c42",
    "requestCooldown()": "a9860c81",
    "setAmountPerRequest(address,uint96)": "0f737c82",
    "setOperator(address)": "b3ab15fb",
    "setRequestCooldown(uint256)": "bc3bc404",
    "setUnlockedRequest(bool)": "20cca627",
    "transferOwnership(address)": "f2fde38b",
    "unlockedRequest()": "29954f43",
    "withdrawToken(address,address,uint256)": "01e33667"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_nativePerRequest\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"_requestCooldown\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_amountPerRequest\",\"type\":\"uint96\"}],\"name\":\"addFaucetToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"faucetTokens\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"ERC20\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"amountPerRequest\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfFaucetTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"removeFaucetToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"request\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"request\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestCooldown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_amountPerRequest\",\"type\":\"uint96\"}],\"name\":\"setAmountPerRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOperator\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestCooldown\",\"type\":\"uint256\"}],\"name\":\"setRequestCooldown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_unlockedRequest\",\"type\":\"bool\"}],\"name\":\"setUnlockedRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockedRequest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Trader Sovryn LB\",\"details\":\"This contract should only be used for testnet\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"addFaucetToken(address,uint96)\":{\"details\":\"Tokens need to be owned by the faucet, and only mintable by the owner\",\"params\":{\"_amountPerRequest\":\"The amount per request\",\"_token\":\"The address of the token\"}},\"constructor\":{\"params\":{\"_nativePerRequest\":\"The native received per request\",\"_requestCooldown\":\"The request cooldown\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"removeFaucetToken(address)\":{\"details\":\"Token needs to be in the set, and NATIVE can't be removed\",\"params\":{\"_token\":\"The address of the token\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"request()\":{\"details\":\"Can be called only once per `requestCooldown` seconds\"},\"request(address)\":{\"details\":\"Can be called only once per `requestCooldown` seconds for every address Can only be called by the operator\",\"params\":{\"_to\":\"The address that will receive the tokens\"}},\"setAmountPerRequest(address,uint96)\":{\"details\":\"This function needs to be called by the owner\",\"params\":{\"_amountPerRequest\":\"The new amount per request\",\"_token\":\"The address of the token\"}},\"setOperator(address)\":{\"params\":{\"_newOperator\":\"The address of the new operator\"}},\"setRequestCooldown(uint256)\":{\"details\":\"This function needs to be called by the owner\",\"params\":{\"_requestCooldown\":\"The new cooldown\"}},\"setUnlockedRequest(bool)\":{\"params\":{\"_unlockedRequest\":\"The address of the new operator\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"},\"withdrawToken(address,address,uint256)\":{\"details\":\"This function needs to be called by the owner\",\"params\":{\"_amount\":\"The token amount to send\",\"_to\":\"The recipient address\",\"_token\":\"The address of the token to withdraw\"}}},\"title\":\"Faucet contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addFaucetToken(address,uint96)\":{\"notice\":\"Add a token to the faucet\"},\"constructor\":{\"notice\":\"Constructor of the faucet, set the request cooldown and add native to the faucet\"},\"faucetTokens(uint256)\":{\"notice\":\"faucet tokens set, custom to be able to use structures\"},\"lastRequest(address)\":{\"notice\":\"last time a user has requested tokens\"},\"numberOfFaucetTokens()\":{\"notice\":\"Returns the number of tokens given by the faucet\"},\"operator()\":{\"notice\":\"The address of the operator that can call request for other address\"},\"removeFaucetToken(address)\":{\"notice\":\"Remove a token from the faucet\"},\"request()\":{\"notice\":\"User needs to call this function in order to receive test tokens and native\"},\"request(address)\":{\"notice\":\"User needs to call this function in order to receive test tokens and native\"},\"requestCooldown()\":{\"notice\":\"The minimum time needed between 2 requests\"},\"setAmountPerRequest(address,uint96)\":{\"notice\":\"Set the amount per request of a specific token, designated by its symbol\"},\"setOperator(address)\":{\"notice\":\"Set the address of the operator\"},\"setRequestCooldown(uint256)\":{\"notice\":\"Set the request cooldown for every users\"},\"setUnlockedRequest(bool)\":{\"notice\":\"Set whether the direct request is unlocked or not\"},\"withdrawToken(address,address,uint256)\":{\"notice\":\"Withdraw `amount` of token `token` to `to`\"}},\"notice\":\"Create a faucet contract that create test tokens and allow user to request for tokens. This faucet will also provide NATIVE if native were sent to the contract (either during the construction or after). This contract will not fail if its native balance becomes too low, it will just not send NATIVE but will mint the different tokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/mocks/Faucet.sol\":\"Faucet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0x08b074ae1b12e70ce24d1335086ec5a418934311a6771d9f61fe24d392050e12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2fd900a8f8244fc0a49bae1ca1bd5815884f248a2306b8e7dc68011c25803b7\",\"dweb:/ipfs/Qmd4EaujSR74x7EqziRDfqgc6Tv2nzRQDSaxKXcU1ybxbA\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73\",\"dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488\",\"dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"test/mocks/Faucet.sol\":{\"keccak256\":\"0x0f8488b15df92479eceea54a4678de8d0926321815c8925166f4ffbc5e777d6d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3d26cfcb208febf7b3f7adbc34df2e4ce9eea592cff9471222ae657eb103b09\",\"dweb:/ipfs/QmVidqAC5E3MzAipYuvNxd13EfAvRjdZddPkoe5dhFtCQM\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "_nativePerRequest",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "_requestCooldown",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressInsufficientBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FailedInnerCall"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferStarted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "_amountPerRequest",
              "type": "uint96"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addFaucetToken"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "faucetTokens",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "ERC20",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "amountPerRequest",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lastRequest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numberOfFaucetTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeFaucetToken"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "request"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "request"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "requestCooldown",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "_amountPerRequest",
              "type": "uint96"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAmountPerRequest"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOperator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperator"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_requestCooldown",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRequestCooldown"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_unlockedRequest",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUnlockedRequest"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "unlockedRequest",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawToken"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptOwnership()": {
            "details": "The new owner accepts the ownership transfer."
          },
          "addFaucetToken(address,uint96)": {
            "details": "Tokens need to be owned by the faucet, and only mintable by the owner",
            "params": {
              "_amountPerRequest": "The amount per request",
              "_token": "The address of the token"
            }
          },
          "constructor": {
            "params": {
              "_nativePerRequest": "The native received per request",
              "_requestCooldown": "The request cooldown"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pendingOwner()": {
            "details": "Returns the address of the pending owner."
          },
          "removeFaucetToken(address)": {
            "details": "Token needs to be in the set, and NATIVE can't be removed",
            "params": {
              "_token": "The address of the token"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "request()": {
            "details": "Can be called only once per `requestCooldown` seconds"
          },
          "request(address)": {
            "details": "Can be called only once per `requestCooldown` seconds for every address Can only be called by the operator",
            "params": {
              "_to": "The address that will receive the tokens"
            }
          },
          "setAmountPerRequest(address,uint96)": {
            "details": "This function needs to be called by the owner",
            "params": {
              "_amountPerRequest": "The new amount per request",
              "_token": "The address of the token"
            }
          },
          "setOperator(address)": {
            "params": {
              "_newOperator": "The address of the new operator"
            }
          },
          "setRequestCooldown(uint256)": {
            "details": "This function needs to be called by the owner",
            "params": {
              "_requestCooldown": "The new cooldown"
            }
          },
          "setUnlockedRequest(bool)": {
            "params": {
              "_unlockedRequest": "The address of the new operator"
            }
          },
          "transferOwnership(address)": {
            "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
          },
          "withdrawToken(address,address,uint256)": {
            "details": "This function needs to be called by the owner",
            "params": {
              "_amount": "The token amount to send",
              "_to": "The recipient address",
              "_token": "The address of the token to withdraw"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addFaucetToken(address,uint96)": {
            "notice": "Add a token to the faucet"
          },
          "constructor": {
            "notice": "Constructor of the faucet, set the request cooldown and add native to the faucet"
          },
          "faucetTokens(uint256)": {
            "notice": "faucet tokens set, custom to be able to use structures"
          },
          "lastRequest(address)": {
            "notice": "last time a user has requested tokens"
          },
          "numberOfFaucetTokens()": {
            "notice": "Returns the number of tokens given by the faucet"
          },
          "operator()": {
            "notice": "The address of the operator that can call request for other address"
          },
          "removeFaucetToken(address)": {
            "notice": "Remove a token from the faucet"
          },
          "request()": {
            "notice": "User needs to call this function in order to receive test tokens and native"
          },
          "request(address)": {
            "notice": "User needs to call this function in order to receive test tokens and native"
          },
          "requestCooldown()": {
            "notice": "The minimum time needed between 2 requests"
          },
          "setAmountPerRequest(address,uint96)": {
            "notice": "Set the amount per request of a specific token, designated by its symbol"
          },
          "setOperator(address)": {
            "notice": "Set the address of the operator"
          },
          "setRequestCooldown(uint256)": {
            "notice": "Set the request cooldown for every users"
          },
          "setUnlockedRequest(bool)": {
            "notice": "Set whether the direct request is unlocked or not"
          },
          "withdrawToken(address,address,uint256)": {
            "notice": "Withdraw `amount` of token `token` to `to`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/mocks/Faucet.sol": "Faucet"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol": {
        "keccak256": "0x08b074ae1b12e70ce24d1335086ec5a418934311a6771d9f61fe24d392050e12",
        "urls": [
          "bzz-raw://e2fd900a8f8244fc0a49bae1ca1bd5815884f248a2306b8e7dc68011c25803b7",
          "dweb:/ipfs/Qmd4EaujSR74x7EqziRDfqgc6Tv2nzRQDSaxKXcU1ybxbA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253",
        "urls": [
          "bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73",
          "dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4",
        "urls": [
          "bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009",
          "dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91",
        "urls": [
          "bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488",
          "dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c",
        "urls": [
          "bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e",
          "dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX"
        ],
        "license": "MIT"
      },
      "test/mocks/Faucet.sol": {
        "keccak256": "0x0f8488b15df92479eceea54a4678de8d0926321815c8925166f4ffbc5e777d6d",
        "urls": [
          "bzz-raw://b3d26cfcb208febf7b3f7adbc34df2e4ce9eea592cff9471222ae657eb103b09",
          "dweb:/ipfs/QmVidqAC5E3MzAipYuvNxd13EfAvRjdZddPkoe5dhFtCQM"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/mocks/Faucet.sol",
    "id": 120388,
    "exportedSymbols": {
      "Faucet": [
        120387
      ],
      "IERC20": [
        48937
      ],
      "Ownable": [
        47040
      ],
      "Ownable2Step": [
        47126
      ],
      "SafeERC20": [
        49386
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:8630:148",
    "nodes": [
      {
        "id": 119827,
        "nodeType": "PragmaDirective",
        "src": "33:24:148",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 119830,
        "nodeType": "ImportDirective",
        "src": "59:90:148",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 120388,
        "sourceUnit": 49387,
        "symbolAliases": [
          {
            "foreign": {
              "id": 119828,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49386,
              "src": "67:9:148",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 119829,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48937,
              "src": "78:6:148",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 119833,
        "nodeType": "ImportDirective",
        "src": "150:86:148",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol",
        "file": "@openzeppelin/contracts/access/Ownable2Step.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 120388,
        "sourceUnit": 47127,
        "symbolAliases": [
          {
            "foreign": {
              "id": 119831,
              "name": "Ownable2Step",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47126,
              "src": "158:12:148",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 119832,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47040,
              "src": "172:7:148",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 120387,
        "nodeType": "ContractDefinition",
        "src": "704:7958:148",
        "nodes": [
          {
            "id": 119840,
            "nodeType": "UsingForDirective",
            "src": "742:27:148",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 119837,
              "name": "SafeERC20",
              "nameLocations": [
                "748:9:148"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49386,
              "src": "748:9:148"
            },
            "typeName": {
              "id": 119839,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 119838,
                "name": "IERC20",
                "nameLocations": [
                  "762:6:148"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 48937,
                "src": "762:6:148"
              },
              "referencedDeclaration": 48937,
              "src": "762:6:148",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$48937",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 119847,
            "nodeType": "StructDefinition",
            "src": "840:81:148",
            "nodes": [],
            "canonicalName": "Faucet.FaucetToken",
            "documentation": {
              "id": 119841,
              "nodeType": "StructuredDocumentation",
              "src": "775:60:148",
              "text": "@dev Structure for faucet token, use only 1 storage slot"
            },
            "members": [
              {
                "constant": false,
                "id": 119844,
                "mutability": "mutable",
                "name": "ERC20",
                "nameLocation": "876:5:148",
                "nodeType": "VariableDeclaration",
                "scope": 119847,
                "src": "869:12:148",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$48937",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 119843,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 119842,
                    "name": "IERC20",
                    "nameLocations": [
                      "869:6:148"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 48937,
                    "src": "869:6:148"
                  },
                  "referencedDeclaration": 48937,
                  "src": "869:6:148",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48937",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 119846,
                "mutability": "mutable",
                "name": "amountPerRequest",
                "nameLocation": "898:16:148",
                "nodeType": "VariableDeclaration",
                "scope": 119847,
                "src": "891:23:148",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 119845,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "891:6:148",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "FaucetToken",
            "nameLocation": "847:11:148",
            "scope": 120387,
            "visibility": "public"
          },
          {
            "id": 119850,
            "nodeType": "VariableDeclaration",
            "src": "1011:23:148",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 119848,
              "nodeType": "StructuredDocumentation",
              "src": "927:79:148",
              "text": "@notice The address of the operator that can call request for other address"
            },
            "functionSelector": "570ca735",
            "mutability": "mutable",
            "name": "operator",
            "nameLocation": "1026:8:148",
            "scope": 120387,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 119849,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1011:7:148",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 119853,
            "nodeType": "VariableDeclaration",
            "src": "1100:30:148",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 119851,
              "nodeType": "StructuredDocumentation",
              "src": "1041:54:148",
              "text": "@notice The minimum time needed between 2 requests"
            },
            "functionSelector": "a9860c81",
            "mutability": "mutable",
            "name": "requestCooldown",
            "nameLocation": "1115:15:148",
            "scope": 120387,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 119852,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1100:7:148",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 119855,
            "nodeType": "VariableDeclaration",
            "src": "1137:27:148",
            "nodes": [],
            "constant": false,
            "functionSelector": "29954f43",
            "mutability": "mutable",
            "name": "unlockedRequest",
            "nameLocation": "1149:15:148",
            "scope": 120387,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 119854,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1137:4:148",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 119860,
            "nodeType": "VariableDeclaration",
            "src": "1225:46:148",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 119856,
              "nodeType": "StructuredDocumentation",
              "src": "1171:49:148",
              "text": "@notice last time a user has requested tokens"
            },
            "functionSelector": "6fb9584f",
            "mutability": "mutable",
            "name": "lastRequest",
            "nameLocation": "1260:11:148",
            "scope": 120387,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 119859,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 119857,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1233:7:148",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1225:27:148",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 119858,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1244:7:148",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 119865,
            "nodeType": "VariableDeclaration",
            "src": "1349:33:148",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 119861,
              "nodeType": "StructuredDocumentation",
              "src": "1278:66:148",
              "text": "@notice faucet tokens set, custom to be able to use structures"
            },
            "functionSelector": "fbedbe62",
            "mutability": "mutable",
            "name": "faucetTokens",
            "nameLocation": "1370:12:148",
            "scope": 120387,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_FaucetToken_$119847_storage_$dyn_storage",
              "typeString": "struct Faucet.FaucetToken[]"
            },
            "typeName": {
              "baseType": {
                "id": 119863,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 119862,
                  "name": "FaucetToken",
                  "nameLocations": [
                    "1349:11:148"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 119847,
                  "src": "1349:11:148"
                },
                "referencedDeclaration": 119847,
                "src": "1349:11:148",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_FaucetToken_$119847_storage_ptr",
                  "typeString": "struct Faucet.FaucetToken"
                }
              },
              "id": 119864,
              "nodeType": "ArrayTypeName",
              "src": "1349:13:148",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_FaucetToken_$119847_storage_$dyn_storage_ptr",
                "typeString": "struct Faucet.FaucetToken[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 119870,
            "nodeType": "VariableDeclaration",
            "src": "1388:41:148",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "tokenToIndices",
            "nameLocation": "1415:14:148",
            "scope": 120387,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$48937_$_t_uint256_$",
              "typeString": "mapping(contract IERC20 => uint256)"
            },
            "typeName": {
              "id": 119869,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 119867,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 119866,
                  "name": "IERC20",
                  "nameLocations": [
                    "1396:6:148"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48937,
                  "src": "1396:6:148"
                },
                "referencedDeclaration": 48937,
                "src": "1396:6:148",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$48937",
                  "typeString": "contract IERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "1388:26:148",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$48937_$_t_uint256_$",
                "typeString": "mapping(contract IERC20 => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 119868,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1406:7:148",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 119882,
            "nodeType": "ModifierDefinition",
            "src": "1436:100:148",
            "nodes": [],
            "body": {
              "id": 119881,
              "nodeType": "Block",
              "src": "1460:76:148",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 119876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 119873,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1478:3:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 119874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1482:6:148",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1478:10:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 119875,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 119850,
                          "src": "1492:8:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1478:22:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f70657261746f72",
                        "id": 119877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1502:15:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eefd2a3fee92e43a5cb56befe80064087eb828178c352ddb526fc45b3f058a25",
                          "typeString": "literal_string \"Only operator\""
                        },
                        "value": "Only operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eefd2a3fee92e43a5cb56befe80064087eb828178c352ddb526fc45b3f058a25",
                          "typeString": "literal_string \"Only operator\""
                        }
                      ],
                      "id": 119872,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1470:7:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 119878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1470:48:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119879,
                  "nodeType": "ExpressionStatement",
                  "src": "1470:48:148"
                },
                {
                  "id": 119880,
                  "nodeType": "PlaceholderStatement",
                  "src": "1528:1:148"
                }
              ]
            },
            "name": "onlyOperator",
            "nameLocation": "1445:12:148",
            "parameters": {
              "id": 119871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1457:2:148"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 119900,
            "nodeType": "ModifierDefinition",
            "src": "1542:149:148",
            "nodes": [],
            "body": {
              "id": 119899,
              "nodeType": "Block",
              "src": "1579:112:148",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 119894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 119887,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1597:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 119888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1603:9:148",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1597:15:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 119893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 119889,
                              "name": "lastRequest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 119860,
                              "src": "1616:11:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 119891,
                            "indexExpression": {
                              "id": 119890,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 119884,
                              "src": "1628:4:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1616:17:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 119892,
                            "name": "requestCooldown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 119853,
                            "src": "1636:15:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1616:35:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1597:54:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6f206d616e79207265717565737473",
                        "id": 119895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1653:19:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3dcba881b1cfa9bda911ca3eaa41380e0ee0b9ac620274c359d61cdd5ba4fe30",
                          "typeString": "literal_string \"Too many requests\""
                        },
                        "value": "Too many requests"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3dcba881b1cfa9bda911ca3eaa41380e0ee0b9ac620274c359d61cdd5ba4fe30",
                          "typeString": "literal_string \"Too many requests\""
                        }
                      ],
                      "id": 119886,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1589:7:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 119896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1589:84:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119897,
                  "nodeType": "ExpressionStatement",
                  "src": "1589:84:148"
                },
                {
                  "id": 119898,
                  "nodeType": "PlaceholderStatement",
                  "src": "1683:1:148"
                }
              ]
            },
            "name": "verifyRequest",
            "nameLocation": "1551:13:148",
            "parameters": {
              "id": 119885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119884,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1573:4:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 119900,
                  "src": "1565:12:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 119883,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1565:7:148",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1564:14:148"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 119913,
            "nodeType": "ModifierDefinition",
            "src": "1697:91:148",
            "nodes": [],
            "body": {
              "id": 119912,
              "nodeType": "Block",
              "src": "1716:72:148",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 119907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 119903,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -26,
                            "src": "1734:2:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 119904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1737:6:148",
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "src": "1734:9:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 119905,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1747:3:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 119906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1751:6:148",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1747:10:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1734:23:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920454f41",
                        "id": 119908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1759:10:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_34db4db51712b904eff14e0d798b5cfced0ebf7fcecfd05d567e4ce1d1aa9861",
                          "typeString": "literal_string \"Only EOA\""
                        },
                        "value": "Only EOA"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_34db4db51712b904eff14e0d798b5cfced0ebf7fcecfd05d567e4ce1d1aa9861",
                          "typeString": "literal_string \"Only EOA\""
                        }
                      ],
                      "id": 119902,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1726:7:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 119909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1726:44:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119910,
                  "nodeType": "ExpressionStatement",
                  "src": "1726:44:148"
                },
                {
                  "id": 119911,
                  "nodeType": "PlaceholderStatement",
                  "src": "1780:1:148"
                }
              ]
            },
            "name": "onlyEOA",
            "nameLocation": "1706:7:148",
            "parameters": {
              "id": 119901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1713:2:148"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 119922,
            "nodeType": "ModifierDefinition",
            "src": "1794:109:148",
            "nodes": [],
            "body": {
              "id": 119921,
              "nodeType": "Block",
              "src": "1823:80:148",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 119916,
                        "name": "unlockedRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119855,
                        "src": "1841:15:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4469726563742072657175657374206973206c6f636b6564",
                        "id": 119917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1858:26:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_214d25077fa70a33160d2f152e7f0234b605cce3e491b45b7cd4d8384a40015f",
                          "typeString": "literal_string \"Direct request is locked\""
                        },
                        "value": "Direct request is locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_214d25077fa70a33160d2f152e7f0234b605cce3e491b45b7cd4d8384a40015f",
                          "typeString": "literal_string \"Direct request is locked\""
                        }
                      ],
                      "id": 119915,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1833:7:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 119918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1833:52:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119919,
                  "nodeType": "ExpressionStatement",
                  "src": "1833:52:148"
                },
                {
                  "id": 119920,
                  "nodeType": "PlaceholderStatement",
                  "src": "1895:1:148"
                }
              ]
            },
            "name": "isRequestUnlocked",
            "nameLocation": "1803:17:148",
            "parameters": {
              "id": 119914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1820:2:148"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 119952,
            "nodeType": "FunctionDefinition",
            "src": "2124:294:148",
            "nodes": [],
            "body": {
              "id": 119951,
              "nodeType": "Block",
              "src": "2260:158:148",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 119936,
                        "name": "_requestCooldown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119929,
                        "src": "2290:16:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 119935,
                      "name": "_setRequestCooldown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120331,
                      "src": "2270:19:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 119937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2270:37:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119938,
                  "nodeType": "ExpressionStatement",
                  "src": "2270:37:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 119944,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2368:1:148",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 119943,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2360:7:148",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 119942,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2360:7:148",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 119945,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2360:10:148",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 119941,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48937,
                              "src": "2353:6:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$48937_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 119946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2353:18:148",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$48937",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "id": 119947,
                            "name": "_nativePerRequest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 119927,
                            "src": "2391:17:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$48937",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          ],
                          "id": 119940,
                          "name": "FaucetToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 119847,
                          "src": "2333:11:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_FaucetToken_$119847_storage_ptr_$",
                            "typeString": "type(struct Faucet.FaucetToken storage pointer)"
                          }
                        },
                        "id": 119948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "2346:5:148",
                          "2373:16:148"
                        ],
                        "names": [
                          "ERC20",
                          "amountPerRequest"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "2333:77:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FaucetToken_$119847_memory_ptr",
                          "typeString": "struct Faucet.FaucetToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_FaucetToken_$119847_memory_ptr",
                          "typeString": "struct Faucet.FaucetToken memory"
                        }
                      ],
                      "id": 119939,
                      "name": "_addFaucetToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120313,
                      "src": "2317:15:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_FaucetToken_$119847_memory_ptr_$returns$__$",
                        "typeString": "function (struct Faucet.FaucetToken memory)"
                      }
                    },
                    "id": 119949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2317:94:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119950,
                  "nodeType": "ExpressionStatement",
                  "src": "2317:94:148"
                }
              ]
            },
            "documentation": {
              "id": 119923,
              "nodeType": "StructuredDocumentation",
              "src": "1909:210:148",
              "text": "@notice Constructor of the faucet, set the request cooldown and add native to the faucet\n @param _nativePerRequest The native received per request\n @param _requestCooldown The request cooldown"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 119932,
                    "name": "initialOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 119925,
                    "src": "2242:12:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 119933,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 119931,
                  "name": "Ownable",
                  "nameLocations": [
                    "2234:7:148"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47040,
                  "src": "2234:7:148"
                },
                "nodeType": "ModifierInvocation",
                "src": "2234:21:148"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 119930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119925,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "2144:12:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 119952,
                  "src": "2136:20:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 119924,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2136:7:148",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119927,
                  "mutability": "mutable",
                  "name": "_nativePerRequest",
                  "nameLocation": "2165:17:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 119952,
                  "src": "2158:24:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 119926,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "2158:6:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119929,
                  "mutability": "mutable",
                  "name": "_requestCooldown",
                  "nameLocation": "2192:16:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 119952,
                  "src": "2184:24:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 119928,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2184:7:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2135:74:148"
            },
            "returnParameters": {
              "id": 119934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2260:0:148"
            },
            "scope": 120387,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 119957,
            "nodeType": "FunctionDefinition",
            "src": "2474:29:148",
            "nodes": [],
            "body": {
              "id": 119956,
              "nodeType": "Block",
              "src": "2501:2:148",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 119953,
              "nodeType": "StructuredDocumentation",
              "src": "2424:45:148",
              "text": "@notice Allows to receive NATIVE directly"
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 119954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2481:2:148"
            },
            "returnParameters": {
              "id": 119955,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2501:0:148"
            },
            "scope": 120387,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 119967,
            "nodeType": "FunctionDefinition",
            "src": "2574:107:148",
            "nodes": [],
            "body": {
              "id": 119966,
              "nodeType": "Block",
              "src": "2638:43:148",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 119963,
                      "name": "faucetTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119865,
                      "src": "2655:12:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FaucetToken_$119847_storage_$dyn_storage",
                        "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                      }
                    },
                    "id": 119964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2668:6:148",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2655:19:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 119962,
                  "id": 119965,
                  "nodeType": "Return",
                  "src": "2648:26:148"
                }
              ]
            },
            "documentation": {
              "id": 119958,
              "nodeType": "StructuredDocumentation",
              "src": "2509:60:148",
              "text": "@notice Returns the number of tokens given by the faucet"
            },
            "functionSelector": "0d639e03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numberOfFaucetTokens",
            "nameLocation": "2583:20:148",
            "parameters": {
              "id": 119959,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2603:2:148"
            },
            "returnParameters": {
              "id": 119962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119961,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 119967,
                  "src": "2629:7:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 119960,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2629:7:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2628:9:148"
            },
            "scope": 120387,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 119993,
            "nodeType": "FunctionDefinition",
            "src": "2846:169:148",
            "nodes": [],
            "body": {
              "id": 119992,
              "nodeType": "Block",
              "src": "2926:89:148",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 119985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 119979,
                        "name": "lastRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119860,
                        "src": "2936:11:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 119982,
                      "indexExpression": {
                        "expression": {
                          "id": 119980,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2948:3:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 119981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2952:6:148",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2948:10:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2936:23:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 119983,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2962:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 119984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2968:9:148",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2962:15:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2936:41:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 119986,
                  "nodeType": "ExpressionStatement",
                  "src": "2936:41:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 119988,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2997:3:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 119989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3001:6:148",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2997:10:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 119987,
                      "name": "_request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120281,
                      "src": "2988:8:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 119990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2988:20:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119991,
                  "nodeType": "ExpressionStatement",
                  "src": "2988:20:148"
                }
              ]
            },
            "documentation": {
              "id": 119968,
              "nodeType": "StructuredDocumentation",
              "src": "2687:154:148",
              "text": "@notice User needs to call this function in order to receive test tokens and native\n @dev Can be called only once per `requestCooldown` seconds"
            },
            "functionSelector": "338cdca1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 119971,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 119970,
                  "name": "onlyEOA",
                  "nameLocations": [
                    "2874:7:148"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 119913,
                  "src": "2874:7:148"
                },
                "nodeType": "ModifierInvocation",
                "src": "2874:7:148"
              },
              {
                "id": 119973,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 119972,
                  "name": "isRequestUnlocked",
                  "nameLocations": [
                    "2882:17:148"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 119922,
                  "src": "2882:17:148"
                },
                "nodeType": "ModifierInvocation",
                "src": "2882:17:148"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 119975,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "2914:3:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 119976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2918:6:148",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2914:10:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 119977,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 119974,
                  "name": "verifyRequest",
                  "nameLocations": [
                    "2900:13:148"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 119900,
                  "src": "2900:13:148"
                },
                "nodeType": "ModifierInvocation",
                "src": "2900:25:148"
              }
            ],
            "name": "request",
            "nameLocation": "2855:7:148",
            "parameters": {
              "id": 119969,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2862:2:148"
            },
            "returnParameters": {
              "id": 119978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2926:0:148"
            },
            "scope": 120387,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 120016,
            "nodeType": "FunctionDefinition",
            "src": "3301:146:148",
            "nodes": [],
            "body": {
              "id": 120015,
              "nodeType": "Block",
              "src": "3372:75:148",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 120009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 120004,
                        "name": "lastRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119860,
                        "src": "3382:11:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 120006,
                      "indexExpression": {
                        "id": 120005,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119996,
                        "src": "3394:3:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3382:16:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 120007,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3401:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 120008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3407:9:148",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3401:15:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3382:34:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 120010,
                  "nodeType": "ExpressionStatement",
                  "src": "3382:34:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 120012,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119996,
                        "src": "3436:3:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 120011,
                      "name": "_request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120281,
                      "src": "3427:8:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 120013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3427:13:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120014,
                  "nodeType": "ExpressionStatement",
                  "src": "3427:13:148"
                }
              ]
            },
            "documentation": {
              "id": 119994,
              "nodeType": "StructuredDocumentation",
              "src": "3021:275:148",
              "text": "@notice User needs to call this function in order to receive test tokens and native\n @dev Can be called only once per `requestCooldown` seconds for every address\n Can only be called by the operator\n @param _to The address that will receive the tokens"
            },
            "functionSelector": "27c78c42",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 119999,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 119998,
                  "name": "onlyOperator",
                  "nameLocations": [
                    "3340:12:148"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 119882,
                  "src": "3340:12:148"
                },
                "nodeType": "ModifierInvocation",
                "src": "3340:12:148"
              },
              {
                "arguments": [
                  {
                    "id": 120001,
                    "name": "_to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 119996,
                    "src": "3367:3:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 120002,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 120000,
                  "name": "verifyRequest",
                  "nameLocations": [
                    "3353:13:148"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 119900,
                  "src": "3353:13:148"
                },
                "nodeType": "ModifierInvocation",
                "src": "3353:18:148"
              }
            ],
            "name": "request",
            "nameLocation": "3310:7:148",
            "parameters": {
              "id": 119997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119996,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3326:3:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 120016,
                  "src": "3318:11:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 119995,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3318:7:148",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3317:13:148"
            },
            "returnParameters": {
              "id": 120003,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3372:0:148"
            },
            "scope": 120387,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 120035,
            "nodeType": "FunctionDefinition",
            "src": "3681:183:148",
            "nodes": [],
            "body": {
              "id": 120034,
              "nodeType": "Block",
              "src": "3765:99:148",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 120029,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120020,
                            "src": "3811:6:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$48937",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "id": 120030,
                            "name": "_amountPerRequest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120022,
                            "src": "3837:17:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$48937",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          ],
                          "id": 120028,
                          "name": "FaucetToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 119847,
                          "src": "3791:11:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_FaucetToken_$119847_storage_ptr_$",
                            "typeString": "type(struct Faucet.FaucetToken storage pointer)"
                          }
                        },
                        "id": 120031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "3804:5:148",
                          "3819:16:148"
                        ],
                        "names": [
                          "ERC20",
                          "amountPerRequest"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "3791:65:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FaucetToken_$119847_memory_ptr",
                          "typeString": "struct Faucet.FaucetToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_FaucetToken_$119847_memory_ptr",
                          "typeString": "struct Faucet.FaucetToken memory"
                        }
                      ],
                      "id": 120027,
                      "name": "_addFaucetToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120313,
                      "src": "3775:15:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_FaucetToken_$119847_memory_ptr_$returns$__$",
                        "typeString": "function (struct Faucet.FaucetToken memory)"
                      }
                    },
                    "id": 120032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3775:82:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120033,
                  "nodeType": "ExpressionStatement",
                  "src": "3775:82:148"
                }
              ]
            },
            "documentation": {
              "id": 120017,
              "nodeType": "StructuredDocumentation",
              "src": "3453:223:148",
              "text": "@notice Add a token to the faucet\n @dev Tokens need to be owned by the faucet, and only mintable by the owner\n @param _token The address of the token\n @param _amountPerRequest The amount per request"
            },
            "functionSelector": "7380f6bd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 120025,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 120024,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3755:9:148"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46951,
                  "src": "3755:9:148"
                },
                "nodeType": "ModifierInvocation",
                "src": "3755:9:148"
              }
            ],
            "name": "addFaucetToken",
            "nameLocation": "3690:14:148",
            "parameters": {
              "id": 120023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120020,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3712:6:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 120035,
                  "src": "3705:13:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48937",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 120019,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 120018,
                      "name": "IERC20",
                      "nameLocations": [
                        "3705:6:148"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48937,
                      "src": "3705:6:148"
                    },
                    "referencedDeclaration": 48937,
                    "src": "3705:6:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48937",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120022,
                  "mutability": "mutable",
                  "name": "_amountPerRequest",
                  "nameLocation": "3727:17:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 120035,
                  "src": "3720:24:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 120021,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3720:6:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3704:41:148"
            },
            "returnParameters": {
              "id": 120026,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3765:0:148"
            },
            "scope": 120387,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 120103,
            "nodeType": "FunctionDefinition",
            "src": "4035:526:148",
            "nodes": [],
            "body": {
              "id": 120102,
              "nodeType": "Block",
              "src": "4096:465:148",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    120045
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 120045,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "4114:5:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 120102,
                      "src": "4106:13:148",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 120044,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4106:7:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 120049,
                  "initialValue": {
                    "baseExpression": {
                      "id": 120046,
                      "name": "tokenToIndices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119870,
                      "src": "4122:14:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_IERC20_$48937_$_t_uint256_$",
                        "typeString": "mapping(contract IERC20 => uint256)"
                      }
                    },
                    "id": 120048,
                    "indexExpression": {
                      "id": 120047,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120039,
                      "src": "4137:6:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48937",
                        "typeString": "contract IERC20"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4122:22:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4106:38:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 120053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 120051,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120045,
                          "src": "4163:5:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 120052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4172:1:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "4163:10:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420612066617563657420746f6b656e",
                        "id": 120054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4175:20:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51acbb0137dbfad630444fa7750127f3c1454547984d6c2362f0bc9f382d6ea0",
                          "typeString": "literal_string \"Not a faucet token\""
                        },
                        "value": "Not a faucet token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51acbb0137dbfad630444fa7750127f3c1454547984d6c2362f0bc9f382d6ea0",
                          "typeString": "literal_string \"Not a faucet token\""
                        }
                      ],
                      "id": 120050,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4155:7:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 120055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4155:41:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120056,
                  "nodeType": "ExpressionStatement",
                  "src": "4155:41:148"
                },
                {
                  "assignments": [
                    120058
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 120058,
                      "mutability": "mutable",
                      "name": "lastIndex",
                      "nameLocation": "4215:9:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 120102,
                      "src": "4207:17:148",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 120057,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4207:7:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 120063,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 120062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 120059,
                        "name": "faucetTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119865,
                        "src": "4227:12:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FaucetToken_$119847_storage_$dyn_storage",
                          "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                        }
                      },
                      "id": 120060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4240:6:148",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4227:19:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 120061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4249:1:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4227:23:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4207:43:148"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 120067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 120065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "--",
                      "prefix": true,
                      "src": "4264:7:148",
                      "subExpression": {
                        "id": 120064,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120045,
                        "src": "4266:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 120066,
                      "name": "lastIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120058,
                      "src": "4275:9:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4264:20:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 120091,
                  "nodeType": "IfStatement",
                  "src": "4260:215:148",
                  "trueBody": {
                    "id": 120090,
                    "nodeType": "Block",
                    "src": "4286:189:148",
                    "statements": [
                      {
                        "assignments": [
                          120070
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 120070,
                            "mutability": "mutable",
                            "name": "faucetToken",
                            "nameLocation": "4319:11:148",
                            "nodeType": "VariableDeclaration",
                            "scope": 120090,
                            "src": "4300:30:148",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FaucetToken_$119847_memory_ptr",
                              "typeString": "struct Faucet.FaucetToken"
                            },
                            "typeName": {
                              "id": 120069,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 120068,
                                "name": "FaucetToken",
                                "nameLocations": [
                                  "4300:11:148"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 119847,
                                "src": "4300:11:148"
                              },
                              "referencedDeclaration": 119847,
                              "src": "4300:11:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FaucetToken_$119847_storage_ptr",
                                "typeString": "struct Faucet.FaucetToken"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 120074,
                        "initialValue": {
                          "baseExpression": {
                            "id": 120071,
                            "name": "faucetTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 119865,
                            "src": "4333:12:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_FaucetToken_$119847_storage_$dyn_storage",
                              "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                            }
                          },
                          "id": 120073,
                          "indexExpression": {
                            "id": 120072,
                            "name": "lastIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120058,
                            "src": "4346:9:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4333:23:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FaucetToken_$119847_storage",
                            "typeString": "struct Faucet.FaucetToken storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4300:56:148"
                      },
                      {
                        "expression": {
                          "id": 120079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 120075,
                              "name": "faucetTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 119865,
                              "src": "4371:12:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_FaucetToken_$119847_storage_$dyn_storage",
                                "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                              }
                            },
                            "id": 120077,
                            "indexExpression": {
                              "id": 120076,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120045,
                              "src": "4384:5:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4371:19:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FaucetToken_$119847_storage",
                              "typeString": "struct Faucet.FaucetToken storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 120078,
                            "name": "faucetToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120070,
                            "src": "4393:11:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FaucetToken_$119847_memory_ptr",
                              "typeString": "struct Faucet.FaucetToken memory"
                            }
                          },
                          "src": "4371:33:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FaucetToken_$119847_storage",
                            "typeString": "struct Faucet.FaucetToken storage ref"
                          }
                        },
                        "id": 120080,
                        "nodeType": "ExpressionStatement",
                        "src": "4371:33:148"
                      },
                      {
                        "expression": {
                          "id": 120088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 120081,
                              "name": "tokenToIndices",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 119870,
                              "src": "4419:14:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$48937_$_t_uint256_$",
                                "typeString": "mapping(contract IERC20 => uint256)"
                              }
                            },
                            "id": 120084,
                            "indexExpression": {
                              "expression": {
                                "id": 120082,
                                "name": "faucetToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 120070,
                                "src": "4434:11:148",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_FaucetToken_$119847_memory_ptr",
                                  "typeString": "struct Faucet.FaucetToken memory"
                                }
                              },
                              "id": 120083,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4446:5:148",
                              "memberName": "ERC20",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 119844,
                              "src": "4434:17:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$48937",
                                "typeString": "contract IERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4419:33:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 120087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 120085,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120045,
                              "src": "4455:5:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 120086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4463:1:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4455:9:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4419:45:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 120089,
                        "nodeType": "ExpressionStatement",
                        "src": "4419:45:148"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 120095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4485:30:148",
                    "subExpression": {
                      "baseExpression": {
                        "id": 120092,
                        "name": "faucetTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119865,
                        "src": "4492:12:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FaucetToken_$119847_storage_$dyn_storage",
                          "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                        }
                      },
                      "id": 120094,
                      "indexExpression": {
                        "id": 120093,
                        "name": "lastIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120058,
                        "src": "4505:9:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4492:23:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FaucetToken_$119847_storage",
                        "typeString": "struct Faucet.FaucetToken storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120096,
                  "nodeType": "ExpressionStatement",
                  "src": "4485:30:148"
                },
                {
                  "expression": {
                    "id": 120100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4525:29:148",
                    "subExpression": {
                      "baseExpression": {
                        "id": 120097,
                        "name": "tokenToIndices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119870,
                        "src": "4532:14:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$48937_$_t_uint256_$",
                          "typeString": "mapping(contract IERC20 => uint256)"
                        }
                      },
                      "id": 120099,
                      "indexExpression": {
                        "id": 120098,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120039,
                        "src": "4547:6:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$48937",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4532:22:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120101,
                  "nodeType": "ExpressionStatement",
                  "src": "4525:29:148"
                }
              ]
            },
            "documentation": {
              "id": 120036,
              "nodeType": "StructuredDocumentation",
              "src": "3870:160:148",
              "text": "@notice Remove a token from the faucet\n @dev Token needs to be in the set, and NATIVE can't be removed\n @param _token The address of the token"
            },
            "functionSelector": "faf034e3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 120042,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 120041,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4086:9:148"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46951,
                  "src": "4086:9:148"
                },
                "nodeType": "ModifierInvocation",
                "src": "4086:9:148"
              }
            ],
            "name": "removeFaucetToken",
            "nameLocation": "4044:17:148",
            "parameters": {
              "id": 120040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120039,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "4069:6:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 120103,
                  "src": "4062:13:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48937",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 120038,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 120037,
                      "name": "IERC20",
                      "nameLocations": [
                        "4062:6:148"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48937,
                      "src": "4062:6:148"
                    },
                    "referencedDeclaration": 48937,
                    "src": "4062:6:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48937",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4061:15:148"
            },
            "returnParameters": {
              "id": 120043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4096:0:148"
            },
            "scope": 120387,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 120116,
            "nodeType": "FunctionDefinition",
            "src": "4732:127:148",
            "nodes": [],
            "body": {
              "id": 120115,
              "nodeType": "Block",
              "src": "4805:54:148",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 120112,
                        "name": "_requestCooldown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120106,
                        "src": "4835:16:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 120111,
                      "name": "_setRequestCooldown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120331,
                      "src": "4815:19:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 120113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4815:37:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120114,
                  "nodeType": "ExpressionStatement",
                  "src": "4815:37:148"
                }
              ]
            },
            "documentation": {
              "id": 120104,
              "nodeType": "StructuredDocumentation",
              "src": "4567:160:148",
              "text": "@notice Set the request cooldown for every users\n @dev This function needs to be called by the owner\n @param _requestCooldown The new cooldown"
            },
            "functionSelector": "bc3bc404",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 120109,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 120108,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4795:9:148"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46951,
                  "src": "4795:9:148"
                },
                "nodeType": "ModifierInvocation",
                "src": "4795:9:148"
              }
            ],
            "name": "setRequestCooldown",
            "nameLocation": "4741:18:148",
            "parameters": {
              "id": 120107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120106,
                  "mutability": "mutable",
                  "name": "_requestCooldown",
                  "nameLocation": "4768:16:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 120116,
                  "src": "4760:24:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 120105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4760:7:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4759:26:148"
            },
            "returnParameters": {
              "id": 120110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4805:0:148"
            },
            "scope": 120387,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 120133,
            "nodeType": "FunctionDefinition",
            "src": "5120:153:148",
            "nodes": [],
            "body": {
              "id": 120132,
              "nodeType": "Block",
              "src": "5209:64:148",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 120128,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120120,
                        "src": "5240:6:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$48937",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 120129,
                        "name": "_amountPerRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120122,
                        "src": "5248:17:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$48937",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 120127,
                      "name": "_setAmountPerRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120363,
                      "src": "5219:20:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$48937_$_t_uint96_$returns$__$",
                        "typeString": "function (contract IERC20,uint96)"
                      }
                    },
                    "id": 120130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5219:47:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120131,
                  "nodeType": "ExpressionStatement",
                  "src": "5219:47:148"
                }
              ]
            },
            "documentation": {
              "id": 120117,
              "nodeType": "StructuredDocumentation",
              "src": "4865:250:148",
              "text": "@notice Set the amount per request of a specific token, designated by its symbol\n @dev This function needs to be called by the owner\n @param _token The address of the token\n @param _amountPerRequest The new amount per request"
            },
            "functionSelector": "0f737c82",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 120125,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 120124,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5199:9:148"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46951,
                  "src": "5199:9:148"
                },
                "nodeType": "ModifierInvocation",
                "src": "5199:9:148"
              }
            ],
            "name": "setAmountPerRequest",
            "nameLocation": "5129:19:148",
            "parameters": {
              "id": 120123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120120,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5156:6:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 120133,
                  "src": "5149:13:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48937",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 120119,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 120118,
                      "name": "IERC20",
                      "nameLocations": [
                        "5149:6:148"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48937,
                      "src": "5149:6:148"
                    },
                    "referencedDeclaration": 48937,
                    "src": "5149:6:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48937",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120122,
                  "mutability": "mutable",
                  "name": "_amountPerRequest",
                  "nameLocation": "5171:17:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 120133,
                  "src": "5164:24:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 120121,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "5164:6:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5148:41:148"
            },
            "returnParameters": {
              "id": 120126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5209:0:148"
            },
            "scope": 120387,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 120169,
            "nodeType": "FunctionDefinition",
            "src": "5545:212:148",
            "nodes": [],
            "body": {
              "id": 120168,
              "nodeType": "Block",
              "src": "5632:125:148",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 120154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 120148,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120137,
                          "src": "5654:6:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$48937",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$48937",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 120147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5646:7:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 120146,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5646:7:148",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 120149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5646:15:148",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 120152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5673:1:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 120151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5665:7:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 120150,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5665:7:148",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 120153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5665:10:148",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5646:29:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 120163,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120139,
                          "src": "5737:3:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 120164,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120141,
                          "src": "5742:7:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 120160,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120137,
                          "src": "5717:6:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$48937",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 120162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5724:12:148",
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49013,
                        "src": "5717:19:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$48937_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$48937_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 120165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5717:33:148",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 120166,
                    "nodeType": "ExpressionStatement",
                    "src": "5717:33:148"
                  },
                  "id": 120167,
                  "nodeType": "IfStatement",
                  "src": "5642:108:148",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 120156,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120139,
                          "src": "5689:3:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 120157,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120141,
                          "src": "5694:7:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 120155,
                        "name": "_sendNative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120386,
                        "src": "5677:11:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256)"
                        }
                      },
                      "id": 120158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5677:25:148",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 120159,
                    "nodeType": "ExpressionStatement",
                    "src": "5677:25:148"
                  }
                }
              ]
            },
            "documentation": {
              "id": 120134,
              "nodeType": "StructuredDocumentation",
              "src": "5279:261:148",
              "text": "@notice Withdraw `amount` of token `token` to `to`\n @dev This function needs to be called by the owner\n @param _token The address of the token to withdraw\n @param _to The recipient address\n @param _amount The token amount to send"
            },
            "functionSelector": "01e33667",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 120144,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 120143,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5622:9:148"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46951,
                  "src": "5622:9:148"
                },
                "nodeType": "ModifierInvocation",
                "src": "5622:9:148"
              }
            ],
            "name": "withdrawToken",
            "nameLocation": "5554:13:148",
            "parameters": {
              "id": 120142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120137,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5575:6:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 120169,
                  "src": "5568:13:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48937",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 120136,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 120135,
                      "name": "IERC20",
                      "nameLocations": [
                        "5568:6:148"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48937,
                      "src": "5568:6:148"
                    },
                    "referencedDeclaration": 48937,
                    "src": "5568:6:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48937",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120139,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5591:3:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 120169,
                  "src": "5583:11:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 120138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5583:7:148",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120141,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5604:7:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 120169,
                  "src": "5596:15:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 120140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5596:7:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5567:45:148"
            },
            "returnParameters": {
              "id": 120145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5632:0:148"
            },
            "scope": 120387,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 120182,
            "nodeType": "FunctionDefinition",
            "src": "5871:102:148",
            "nodes": [],
            "body": {
              "id": 120181,
              "nodeType": "Block",
              "src": "5933:40:148",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 120179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 120177,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119850,
                      "src": "5943:8:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 120178,
                      "name": "_newOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120172,
                      "src": "5954:12:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5943:23:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 120180,
                  "nodeType": "ExpressionStatement",
                  "src": "5943:23:148"
                }
              ]
            },
            "documentation": {
              "id": 120170,
              "nodeType": "StructuredDocumentation",
              "src": "5763:103:148",
              "text": "@notice Set the address of the operator\n @param _newOperator The address of the new operator"
            },
            "functionSelector": "b3ab15fb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 120175,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 120174,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5923:9:148"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46951,
                  "src": "5923:9:148"
                },
                "nodeType": "ModifierInvocation",
                "src": "5923:9:148"
              }
            ],
            "name": "setOperator",
            "nameLocation": "5880:11:148",
            "parameters": {
              "id": 120173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120172,
                  "mutability": "mutable",
                  "name": "_newOperator",
                  "nameLocation": "5900:12:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 120182,
                  "src": "5892:20:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 120171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5892:7:148",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5891:22:148"
            },
            "returnParameters": {
              "id": 120176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5933:0:148"
            },
            "scope": 120387,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 120195,
            "nodeType": "FunctionDefinition",
            "src": "6109:121:148",
            "nodes": [],
            "body": {
              "id": 120194,
              "nodeType": "Block",
              "src": "6179:51:148",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 120192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 120190,
                      "name": "unlockedRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119855,
                      "src": "6189:15:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 120191,
                      "name": "_unlockedRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120185,
                      "src": "6207:16:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6189:34:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 120193,
                  "nodeType": "ExpressionStatement",
                  "src": "6189:34:148"
                }
              ]
            },
            "documentation": {
              "id": 120183,
              "nodeType": "StructuredDocumentation",
              "src": "5979:125:148",
              "text": "@notice Set whether the direct request is unlocked or not\n @param _unlockedRequest The address of the new operator"
            },
            "functionSelector": "20cca627",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 120188,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 120187,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6169:9:148"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46951,
                  "src": "6169:9:148"
                },
                "nodeType": "ModifierInvocation",
                "src": "6169:9:148"
              }
            ],
            "name": "setUnlockedRequest",
            "nameLocation": "6118:18:148",
            "parameters": {
              "id": 120186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120185,
                  "mutability": "mutable",
                  "name": "_unlockedRequest",
                  "nameLocation": "6142:16:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 120195,
                  "src": "6137:21:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 120184,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6137:4:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6136:23:148"
            },
            "returnParameters": {
              "id": 120189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6179:0:148"
            },
            "scope": 120387,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 120281,
            "nodeType": "FunctionDefinition",
            "src": "6437:590:148",
            "nodes": [],
            "body": {
              "id": 120280,
              "nodeType": "Block",
              "src": "6476:551:148",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    120202
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 120202,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "6494:3:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 120280,
                      "src": "6486:11:148",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 120201,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6486:7:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 120205,
                  "initialValue": {
                    "expression": {
                      "id": 120203,
                      "name": "faucetTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119865,
                      "src": "6500:12:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FaucetToken_$119847_storage_$dyn_storage",
                        "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                      }
                    },
                    "id": 120204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6513:6:148",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "6500:19:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6486:33:148"
                },
                {
                  "assignments": [
                    120208
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 120208,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "6549:5:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 120280,
                      "src": "6530:24:148",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FaucetToken_$119847_memory_ptr",
                        "typeString": "struct Faucet.FaucetToken"
                      },
                      "typeName": {
                        "id": 120207,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 120206,
                          "name": "FaucetToken",
                          "nameLocations": [
                            "6530:11:148"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 119847,
                          "src": "6530:11:148"
                        },
                        "referencedDeclaration": 119847,
                        "src": "6530:11:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FaucetToken_$119847_storage_ptr",
                          "typeString": "struct Faucet.FaucetToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 120212,
                  "initialValue": {
                    "baseExpression": {
                      "id": 120209,
                      "name": "faucetTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119865,
                      "src": "6557:12:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FaucetToken_$119847_storage_$dyn_storage",
                        "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                      }
                    },
                    "id": 120211,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 120210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6570:1:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6557:15:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FaucetToken_$119847_storage",
                      "typeString": "struct Faucet.FaucetToken storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6530:42:148"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 120225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "id": 120216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 120213,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120208,
                          "src": "6587:5:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FaucetToken_$119847_memory_ptr",
                            "typeString": "struct Faucet.FaucetToken memory"
                          }
                        },
                        "id": 120214,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6593:16:148",
                        "memberName": "amountPerRequest",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 119846,
                        "src": "6587:22:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 120215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6612:1:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6587:26:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 120224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 120219,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "6625:4:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Faucet_$120387",
                                "typeString": "contract Faucet"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Faucet_$120387",
                                "typeString": "contract Faucet"
                              }
                            ],
                            "id": 120218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6617:7:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 120217,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6617:7:148",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 120220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6617:13:148",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 120221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6631:7:148",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "6617:21:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "expression": {
                          "id": 120222,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120208,
                          "src": "6642:5:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FaucetToken_$119847_memory_ptr",
                            "typeString": "struct Faucet.FaucetToken memory"
                          }
                        },
                        "id": 120223,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6648:16:148",
                        "memberName": "amountPerRequest",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 119846,
                        "src": "6642:22:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "src": "6617:47:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6587:77:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 120233,
                  "nodeType": "IfStatement",
                  "src": "6583:148:148",
                  "trueBody": {
                    "id": 120232,
                    "nodeType": "Block",
                    "src": "6666:65:148",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 120227,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120198,
                              "src": "6692:3:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 120228,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 120208,
                                "src": "6697:5:148",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_FaucetToken_$119847_memory_ptr",
                                  "typeString": "struct Faucet.FaucetToken memory"
                                }
                              },
                              "id": 120229,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6703:16:148",
                              "memberName": "amountPerRequest",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 119846,
                              "src": "6697:22:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            ],
                            "id": 120226,
                            "name": "_sendNative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120386,
                            "src": "6680:11:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 120230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6680:40:148",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 120231,
                        "nodeType": "ExpressionStatement",
                        "src": "6680:40:148"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 120278,
                    "nodeType": "Block",
                    "src": "6775:246:148",
                    "statements": [
                      {
                        "expression": {
                          "id": 120248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 120244,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120208,
                            "src": "6789:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FaucetToken_$119847_memory_ptr",
                              "typeString": "struct Faucet.FaucetToken memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 120245,
                              "name": "faucetTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 119865,
                              "src": "6797:12:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_FaucetToken_$119847_storage_$dyn_storage",
                                "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                              }
                            },
                            "id": 120247,
                            "indexExpression": {
                              "id": 120246,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120235,
                              "src": "6810:1:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6797:15:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FaucetToken_$119847_storage",
                              "typeString": "struct Faucet.FaucetToken storage ref"
                            }
                          },
                          "src": "6789:23:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FaucetToken_$119847_memory_ptr",
                            "typeString": "struct Faucet.FaucetToken memory"
                          }
                        },
                        "id": 120249,
                        "nodeType": "ExpressionStatement",
                        "src": "6789:23:148"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 120265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            },
                            "id": 120253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 120250,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 120208,
                                "src": "6831:5:148",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_FaucetToken_$119847_memory_ptr",
                                  "typeString": "struct Faucet.FaucetToken memory"
                                }
                              },
                              "id": 120251,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6837:16:148",
                              "memberName": "amountPerRequest",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 119846,
                              "src": "6831:22:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 120252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6856:1:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "6831:26:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 120264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 120259,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "6891:4:148",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Faucet_$120387",
                                        "typeString": "contract Faucet"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Faucet_$120387",
                                        "typeString": "contract Faucet"
                                      }
                                    ],
                                    "id": 120258,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6883:7:148",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 120257,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6883:7:148",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 120260,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6883:13:148",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "id": 120254,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 120208,
                                    "src": "6861:5:148",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_FaucetToken_$119847_memory_ptr",
                                      "typeString": "struct Faucet.FaucetToken memory"
                                    }
                                  },
                                  "id": 120255,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6867:5:148",
                                  "memberName": "ERC20",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 119844,
                                  "src": "6861:11:148",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$48937",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 120256,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6873:9:148",
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 48894,
                                "src": "6861:21:148",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 120261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6861:36:148",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "expression": {
                                "id": 120262,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 120208,
                                "src": "6901:5:148",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_FaucetToken_$119847_memory_ptr",
                                  "typeString": "struct Faucet.FaucetToken memory"
                                }
                              },
                              "id": 120263,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6907:16:148",
                              "memberName": "amountPerRequest",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 119846,
                              "src": "6901:22:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "src": "6861:62:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6831:92:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120277,
                        "nodeType": "IfStatement",
                        "src": "6827:184:148",
                        "trueBody": {
                          "id": 120276,
                          "nodeType": "Block",
                          "src": "6925:86:148",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 120271,
                                    "name": "_to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 120198,
                                    "src": "6968:3:148",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 120272,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 120208,
                                      "src": "6973:5:148",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_FaucetToken_$119847_memory_ptr",
                                        "typeString": "struct Faucet.FaucetToken memory"
                                      }
                                    },
                                    "id": 120273,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6979:16:148",
                                    "memberName": "amountPerRequest",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 119846,
                                    "src": "6973:22:148",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint96",
                                      "typeString": "uint96"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint96",
                                      "typeString": "uint96"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "id": 120266,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 120208,
                                      "src": "6943:5:148",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_FaucetToken_$119847_memory_ptr",
                                        "typeString": "struct Faucet.FaucetToken memory"
                                      }
                                    },
                                    "id": 120269,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6949:5:148",
                                    "memberName": "ERC20",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 119844,
                                    "src": "6943:11:148",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$48937",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 120270,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6955:12:148",
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 49013,
                                  "src": "6943:24:148",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$48937_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$48937_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 120274,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6943:53:148",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 120275,
                              "nodeType": "ExpressionStatement",
                              "src": "6943:53:148"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 120240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 120238,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120235,
                      "src": "6761:1:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 120239,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120202,
                      "src": "6765:3:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6761:7:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 120279,
                  "initializationExpression": {
                    "assignments": [
                      120235
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 120235,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6754:1:148",
                        "nodeType": "VariableDeclaration",
                        "scope": 120279,
                        "src": "6746:9:148",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 120234,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6746:7:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 120237,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 120236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6758:1:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6746:13:148"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 120242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "6770:3:148",
                      "subExpression": {
                        "id": 120241,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120235,
                        "src": "6772:1:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 120243,
                    "nodeType": "ExpressionStatement",
                    "src": "6770:3:148"
                  },
                  "nodeType": "ForStatement",
                  "src": "6741:280:148"
                }
              ]
            },
            "documentation": {
              "id": 120196,
              "nodeType": "StructuredDocumentation",
              "src": "6236:196:148",
              "text": "@notice Private function to send faucet tokens to the user\n @dev Will only send tokens if the faucet has a sufficient balance\n @param _to The address that will receive the tokens"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_request",
            "nameLocation": "6446:8:148",
            "parameters": {
              "id": 120199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120198,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "6463:3:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 120281,
                  "src": "6455:11:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 120197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6455:7:148",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6454:13:148"
            },
            "returnParameters": {
              "id": 120200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6476:0:148"
            },
            "scope": 120387,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 120313,
            "nodeType": "FunctionDefinition",
            "src": "7223:241:148",
            "nodes": [],
            "body": {
              "id": 120312,
              "nodeType": "Block",
              "src": "7283:181:148",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 120294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 120289,
                            "name": "tokenToIndices",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 119870,
                            "src": "7301:14:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$48937_$_t_uint256_$",
                              "typeString": "mapping(contract IERC20 => uint256)"
                            }
                          },
                          "id": 120292,
                          "indexExpression": {
                            "expression": {
                              "id": 120290,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120285,
                              "src": "7316:6:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FaucetToken_$119847_memory_ptr",
                                "typeString": "struct Faucet.FaucetToken memory"
                              }
                            },
                            "id": 120291,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7323:5:148",
                            "memberName": "ERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 119844,
                            "src": "7316:12:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$48937",
                              "typeString": "contract IERC20"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7301:28:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 120293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7333:1:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7301:33:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920612066617563657420746f6b656e",
                        "id": 120295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7336:24:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e4942d2d26b3690543431687aa0b41cd33d60c80e561e495cbaf9de8f7207d4",
                          "typeString": "literal_string \"Already a faucet token\""
                        },
                        "value": "Already a faucet token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e4942d2d26b3690543431687aa0b41cd33d60c80e561e495cbaf9de8f7207d4",
                          "typeString": "literal_string \"Already a faucet token\""
                        }
                      ],
                      "id": 120288,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7293:7:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 120296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7293:68:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120297,
                  "nodeType": "ExpressionStatement",
                  "src": "7293:68:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 120301,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120285,
                        "src": "7390:6:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FaucetToken_$119847_memory_ptr",
                          "typeString": "struct Faucet.FaucetToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_FaucetToken_$119847_memory_ptr",
                          "typeString": "struct Faucet.FaucetToken memory"
                        }
                      ],
                      "expression": {
                        "id": 120298,
                        "name": "faucetTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119865,
                        "src": "7372:12:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FaucetToken_$119847_storage_$dyn_storage",
                          "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                        }
                      },
                      "id": 120300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7385:4:148",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7372:17:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_FaucetToken_$119847_storage_$dyn_storage_ptr_$_t_struct$_FaucetToken_$119847_storage_$returns$__$attached_to$_t_array$_t_struct$_FaucetToken_$119847_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Faucet.FaucetToken storage ref[] storage pointer,struct Faucet.FaucetToken storage ref)"
                      }
                    },
                    "id": 120302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7372:25:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120303,
                  "nodeType": "ExpressionStatement",
                  "src": "7372:25:148"
                },
                {
                  "expression": {
                    "id": 120310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 120304,
                        "name": "tokenToIndices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119870,
                        "src": "7407:14:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$48937_$_t_uint256_$",
                          "typeString": "mapping(contract IERC20 => uint256)"
                        }
                      },
                      "id": 120307,
                      "indexExpression": {
                        "expression": {
                          "id": 120305,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120285,
                          "src": "7422:6:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FaucetToken_$119847_memory_ptr",
                            "typeString": "struct Faucet.FaucetToken memory"
                          }
                        },
                        "id": 120306,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7429:5:148",
                        "memberName": "ERC20",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 119844,
                        "src": "7422:12:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$48937",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7407:28:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 120308,
                        "name": "faucetTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119865,
                        "src": "7438:12:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FaucetToken_$119847_storage_$dyn_storage",
                          "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                        }
                      },
                      "id": 120309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7451:6:148",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7438:19:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7407:50:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 120311,
                  "nodeType": "ExpressionStatement",
                  "src": "7407:50:148"
                }
              ]
            },
            "documentation": {
              "id": 120282,
              "nodeType": "StructuredDocumentation",
              "src": "7033:185:148",
              "text": "@notice Private function to add a token to the faucet\n @dev Token needs to be not added to the set yet\n @param _token The token to add, using the FaucetToken structure"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addFaucetToken",
            "nameLocation": "7232:15:148",
            "parameters": {
              "id": 120286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120285,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "7267:6:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 120313,
                  "src": "7248:25:148",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FaucetToken_$119847_memory_ptr",
                    "typeString": "struct Faucet.FaucetToken"
                  },
                  "typeName": {
                    "id": 120284,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 120283,
                      "name": "FaucetToken",
                      "nameLocations": [
                        "7248:11:148"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 119847,
                      "src": "7248:11:148"
                    },
                    "referencedDeclaration": 119847,
                    "src": "7248:11:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FaucetToken_$119847_storage_ptr",
                      "typeString": "struct Faucet.FaucetToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7247:27:148"
            },
            "returnParameters": {
              "id": 120287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7283:0:148"
            },
            "scope": 120387,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 120331,
            "nodeType": "FunctionDefinition",
            "src": "7658:188:148",
            "nodes": [],
            "body": {
              "id": 120330,
              "nodeType": "Block",
              "src": "7721:125:148",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 120322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 120320,
                          "name": "_requestCooldown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120316,
                          "src": "7739:16:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 120321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7759:7:148",
                          "subdenomination": "hours",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3600_by_1",
                            "typeString": "int_const 3600"
                          },
                          "value": "1"
                        },
                        "src": "7739:27:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e73616665207265717565737420636f6f6c646f776e",
                        "id": 120323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7768:25:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cabd3c44c9bb20914e4a399085579484a140e5871cdf9b2a89a98248a8f2b8bf",
                          "typeString": "literal_string \"Unsafe request cooldown\""
                        },
                        "value": "Unsafe request cooldown"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cabd3c44c9bb20914e4a399085579484a140e5871cdf9b2a89a98248a8f2b8bf",
                          "typeString": "literal_string \"Unsafe request cooldown\""
                        }
                      ],
                      "id": 120319,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7731:7:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 120324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7731:63:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120325,
                  "nodeType": "ExpressionStatement",
                  "src": "7731:63:148"
                },
                {
                  "expression": {
                    "id": 120328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 120326,
                      "name": "requestCooldown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119853,
                      "src": "7805:15:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 120327,
                      "name": "_requestCooldown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120316,
                      "src": "7823:16:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7805:34:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 120329,
                  "nodeType": "ExpressionStatement",
                  "src": "7805:34:148"
                }
              ]
            },
            "documentation": {
              "id": 120314,
              "nodeType": "StructuredDocumentation",
              "src": "7470:183:148",
              "text": "@notice Private function to set the request cooldown for every users\n @dev The new cooldown needs to be greater than 1 hour\n @param _requestCooldown The new cooldown"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setRequestCooldown",
            "nameLocation": "7667:19:148",
            "parameters": {
              "id": 120317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120316,
                  "mutability": "mutable",
                  "name": "_requestCooldown",
                  "nameLocation": "7695:16:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 120331,
                  "src": "7687:24:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 120315,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7687:7:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7686:26:148"
            },
            "returnParameters": {
              "id": 120318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7721:0:148"
            },
            "scope": 120387,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 120363,
            "nodeType": "FunctionDefinition",
            "src": "8068:257:148",
            "nodes": [],
            "body": {
              "id": 120362,
              "nodeType": "Block",
              "src": "8147:178:148",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    120341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 120341,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "8165:5:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 120362,
                      "src": "8157:13:148",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 120340,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8157:7:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 120345,
                  "initialValue": {
                    "baseExpression": {
                      "id": 120342,
                      "name": "tokenToIndices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119870,
                      "src": "8173:14:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_IERC20_$48937_$_t_uint256_$",
                        "typeString": "mapping(contract IERC20 => uint256)"
                      }
                    },
                    "id": 120344,
                    "indexExpression": {
                      "id": 120343,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120335,
                      "src": "8188:6:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48937",
                        "typeString": "contract IERC20"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8173:22:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8157:38:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 120349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 120347,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120341,
                          "src": "8214:5:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 120348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8223:1:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8214:10:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420612066617563657420746f6b656e",
                        "id": 120350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8226:20:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51acbb0137dbfad630444fa7750127f3c1454547984d6c2362f0bc9f382d6ea0",
                          "typeString": "literal_string \"Not a faucet token\""
                        },
                        "value": "Not a faucet token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51acbb0137dbfad630444fa7750127f3c1454547984d6c2362f0bc9f382d6ea0",
                          "typeString": "literal_string \"Not a faucet token\""
                        }
                      ],
                      "id": 120346,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8206:7:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 120351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8206:41:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120352,
                  "nodeType": "ExpressionStatement",
                  "src": "8206:41:148"
                },
                {
                  "expression": {
                    "id": 120360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 120353,
                          "name": "faucetTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 119865,
                          "src": "8258:12:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_FaucetToken_$119847_storage_$dyn_storage",
                            "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                          }
                        },
                        "id": 120357,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 120356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 120354,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120341,
                            "src": "8271:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 120355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8279:1:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "8271:9:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8258:23:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FaucetToken_$119847_storage",
                          "typeString": "struct Faucet.FaucetToken storage ref"
                        }
                      },
                      "id": 120358,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8282:16:148",
                      "memberName": "amountPerRequest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 119846,
                      "src": "8258:40:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 120359,
                      "name": "_amountPerRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120337,
                      "src": "8301:17:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "8258:60:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 120361,
                  "nodeType": "ExpressionStatement",
                  "src": "8258:60:148"
                }
              ]
            },
            "documentation": {
              "id": 120332,
              "nodeType": "StructuredDocumentation",
              "src": "7852:211:148",
              "text": "@notice Private function to set the amount per request of a specific token, designated by its symbol\n @param _token The address of the token\n @param _amountPerRequest The new amount per request"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setAmountPerRequest",
            "nameLocation": "8077:20:148",
            "parameters": {
              "id": 120338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120335,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "8105:6:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 120363,
                  "src": "8098:13:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48937",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 120334,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 120333,
                      "name": "IERC20",
                      "nameLocations": [
                        "8098:6:148"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48937,
                      "src": "8098:6:148"
                    },
                    "referencedDeclaration": 48937,
                    "src": "8098:6:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48937",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120337,
                  "mutability": "mutable",
                  "name": "_amountPerRequest",
                  "nameLocation": "8120:17:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 120363,
                  "src": "8113:24:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 120336,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "8113:6:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8097:41:148"
            },
            "returnParameters": {
              "id": 120339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8147:0:148"
            },
            "scope": 120387,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 120386,
            "nodeType": "FunctionDefinition",
            "src": "8486:174:148",
            "nodes": [],
            "body": {
              "id": 120385,
              "nodeType": "Block",
              "src": "8545:115:148",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    120372,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 120372,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "8561:7:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 120385,
                      "src": "8556:12:148",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 120371,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8556:4:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 120379,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 120377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8598:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 120373,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120366,
                          "src": "8573:3:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 120374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8577:4:148",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8573:8:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 120376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 120375,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120368,
                          "src": "8589:7:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "8573:24:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 120378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8573:28:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8555:46:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 120381,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120372,
                        "src": "8619:7:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4154495645207472616e73666572206661696c6564",
                        "id": 120382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8628:24:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_accb95cda51b4f7c5df2ca881f7b95ec038afce74ac2b65c4f752659004ff53f",
                          "typeString": "literal_string \"NATIVE transfer failed\""
                        },
                        "value": "NATIVE transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_accb95cda51b4f7c5df2ca881f7b95ec038afce74ac2b65c4f752659004ff53f",
                          "typeString": "literal_string \"NATIVE transfer failed\""
                        }
                      ],
                      "id": 120380,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8611:7:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 120383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8611:42:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120384,
                  "nodeType": "ExpressionStatement",
                  "src": "8611:42:148"
                }
              ]
            },
            "documentation": {
              "id": 120364,
              "nodeType": "StructuredDocumentation",
              "src": "8331:150:148",
              "text": "@notice Private function to send `amount` NATIVE to `to`\n @param _to The recipient address\n @param _amount The NATIVE amount to send"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sendNative",
            "nameLocation": "8495:11:148",
            "parameters": {
              "id": 120369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120366,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "8515:3:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 120386,
                  "src": "8507:11:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 120365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8507:7:148",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120368,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "8528:7:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 120386,
                  "src": "8520:15:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 120367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8520:7:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8506:30:148"
            },
            "returnParameters": {
              "id": 120370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8545:0:148"
            },
            "scope": 120387,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 119835,
              "name": "Ownable2Step",
              "nameLocations": [
                "723:12:148"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47126,
              "src": "723:12:148"
            },
            "id": 119836,
            "nodeType": "InheritanceSpecifier",
            "src": "723:12:148"
          }
        ],
        "canonicalName": "Faucet",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 119834,
          "nodeType": "StructuredDocumentation",
          "src": "238:466:148",
          "text": "@title Faucet contract\n @author Trader Sovryn LB\n @dev This contract should only be used for testnet\n @notice Create a faucet contract that create test tokens and allow user to request for tokens.\n This faucet will also provide NATIVE if native were sent to the contract (either during the construction or after).\n This contract will not fail if its native balance becomes too low, it will just not send NATIVE but will mint the different tokens."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          120387,
          47126,
          47040,
          49669
        ],
        "name": "Faucet",
        "nameLocation": "713:6:148",
        "scope": 120388,
        "usedErrors": [
          46906,
          46911,
          48980,
          49394,
          49399,
          49402
        ],
        "usedEvents": [
          46917,
          47055
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 148
}