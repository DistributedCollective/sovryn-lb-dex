{
  "abi": [
    {
      "inputs": [],
      "name": "EnforcedPause",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExpectedPause",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "paused()": "5c975abb"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "EnforcedPause"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExpectedPause"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "details": "Initializes the contract in unpaused state."
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/openzeppelin-contracts/contracts/utils/Pausable.sol": "Pausable"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Pausable.sol": {
        "keccak256": "0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd",
        "urls": [
          "bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc",
          "dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Pausable.sol",
    "id": 49545,
    "exportedSymbols": {
      "Context": [
        49427
      ],
      "Pausable": [
        49544
      ]
    },
    "nodeType": "SourceUnit",
    "src": "102:2728:49",
    "nodes": [
      {
        "id": 49429,
        "nodeType": "PragmaDirective",
        "src": "102:24:49",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 49431,
        "nodeType": "ImportDirective",
        "src": "128:45:49",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "file": "../utils/Context.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49545,
        "sourceUnit": 49428,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49430,
              "name": "Context",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49427,
              "src": "136:7:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49544,
        "nodeType": "ContractDefinition",
        "src": "615:2214:49",
        "nodes": [
          {
            "id": 49436,
            "nodeType": "VariableDeclaration",
            "src": "659:20:49",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_paused",
            "nameLocation": "672:7:49",
            "scope": 49544,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 49435,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "659:4:49",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "id": 49441,
            "nodeType": "EventDefinition",
            "src": "764:30:49",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 49437,
              "nodeType": "StructuredDocumentation",
              "src": "686:73:49",
              "text": " @dev Emitted when the pause is triggered by `account`."
            },
            "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
            "name": "Paused",
            "nameLocation": "770:6:49",
            "parameters": {
              "id": 49440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49439,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "785:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 49441,
                  "src": "777:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "777:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "776:17:49"
            }
          },
          {
            "id": 49446,
            "nodeType": "EventDefinition",
            "src": "875:32:49",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 49442,
              "nodeType": "StructuredDocumentation",
              "src": "800:70:49",
              "text": " @dev Emitted when the pause is lifted by `account`."
            },
            "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
            "name": "Unpaused",
            "nameLocation": "881:8:49",
            "parameters": {
              "id": 49445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49444,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "898:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 49446,
                  "src": "890:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49443,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "890:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "889:17:49"
            }
          },
          {
            "id": 49449,
            "nodeType": "ErrorDefinition",
            "src": "994:22:49",
            "nodes": [],
            "documentation": {
              "id": 49447,
              "nodeType": "StructuredDocumentation",
              "src": "913:76:49",
              "text": " @dev The operation failed because the contract is paused."
            },
            "errorSelector": "d93c0665",
            "name": "EnforcedPause",
            "nameLocation": "1000:13:49",
            "parameters": {
              "id": 49448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1013:2:49"
            }
          },
          {
            "id": 49452,
            "nodeType": "ErrorDefinition",
            "src": "1107:22:49",
            "nodes": [],
            "documentation": {
              "id": 49450,
              "nodeType": "StructuredDocumentation",
              "src": "1022:80:49",
              "text": " @dev The operation failed because the contract is not paused."
            },
            "errorSelector": "8dfc202b",
            "name": "ExpectedPause",
            "nameLocation": "1113:13:49",
            "parameters": {
              "id": 49451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1126:2:49"
            }
          },
          {
            "id": 49461,
            "nodeType": "FunctionDefinition",
            "src": "1207:46:49",
            "nodes": [],
            "body": {
              "id": 49460,
              "nodeType": "Block",
              "src": "1221:32:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 49458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49456,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49436,
                      "src": "1231:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 49457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1241:5:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1231:15:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49459,
                  "nodeType": "ExpressionStatement",
                  "src": "1231:15:49"
                }
              ]
            },
            "documentation": {
              "id": 49453,
              "nodeType": "StructuredDocumentation",
              "src": "1135:67:49",
              "text": " @dev Initializes the contract in unpaused state."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 49454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1218:2:49"
            },
            "returnParameters": {
              "id": 49455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1221:0:49"
            },
            "scope": 49544,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 49469,
            "nodeType": "ModifierDefinition",
            "src": "1439:72:49",
            "nodes": [],
            "body": {
              "id": 49468,
              "nodeType": "Block",
              "src": "1464:47:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49464,
                      "name": "_requireNotPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49498,
                      "src": "1474:17:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 49465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1474:19:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49466,
                  "nodeType": "ExpressionStatement",
                  "src": "1474:19:49"
                },
                {
                  "id": 49467,
                  "nodeType": "PlaceholderStatement",
                  "src": "1503:1:49"
                }
              ]
            },
            "documentation": {
              "id": 49462,
              "nodeType": "StructuredDocumentation",
              "src": "1259:175:49",
              "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
            },
            "name": "whenNotPaused",
            "nameLocation": "1448:13:49",
            "parameters": {
              "id": 49463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1461:2:49"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 49477,
            "nodeType": "ModifierDefinition",
            "src": "1689:66:49",
            "nodes": [],
            "body": {
              "id": 49476,
              "nodeType": "Block",
              "src": "1711:44:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49472,
                      "name": "_requirePaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49511,
                      "src": "1721:14:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 49473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1721:16:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49474,
                  "nodeType": "ExpressionStatement",
                  "src": "1721:16:49"
                },
                {
                  "id": 49475,
                  "nodeType": "PlaceholderStatement",
                  "src": "1747:1:49"
                }
              ]
            },
            "documentation": {
              "id": 49470,
              "nodeType": "StructuredDocumentation",
              "src": "1517:167:49",
              "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
            },
            "name": "whenPaused",
            "nameLocation": "1698:10:49",
            "parameters": {
              "id": 49471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1708:2:49"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 49486,
            "nodeType": "FunctionDefinition",
            "src": "1850:84:49",
            "nodes": [],
            "body": {
              "id": 49485,
              "nodeType": "Block",
              "src": "1903:31:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 49483,
                    "name": "_paused",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49436,
                    "src": "1920:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 49482,
                  "id": 49484,
                  "nodeType": "Return",
                  "src": "1913:14:49"
                }
              ]
            },
            "documentation": {
              "id": 49478,
              "nodeType": "StructuredDocumentation",
              "src": "1761:84:49",
              "text": " @dev Returns true if the contract is paused, and false otherwise."
            },
            "functionSelector": "5c975abb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paused",
            "nameLocation": "1859:6:49",
            "parameters": {
              "id": 49479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1865:2:49"
            },
            "returnParameters": {
              "id": 49482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49481,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49486,
                  "src": "1897:4:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 49480,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1897:4:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1896:6:49"
            },
            "scope": 49544,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 49498,
            "nodeType": "FunctionDefinition",
            "src": "2002:128:49",
            "nodes": [],
            "body": {
              "id": 49497,
              "nodeType": "Block",
              "src": "2053:77:49",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49490,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49486,
                      "src": "2067:6:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 49491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2067:8:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49496,
                  "nodeType": "IfStatement",
                  "src": "2063:61:49",
                  "trueBody": {
                    "id": 49495,
                    "nodeType": "Block",
                    "src": "2077:47:49",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 49492,
                            "name": "EnforcedPause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49449,
                            "src": "2098:13:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 49493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2098:15:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 49494,
                        "nodeType": "RevertStatement",
                        "src": "2091:22:49"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 49487,
              "nodeType": "StructuredDocumentation",
              "src": "1940:57:49",
              "text": " @dev Throws if the contract is paused."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireNotPaused",
            "nameLocation": "2011:17:49",
            "parameters": {
              "id": 49488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2028:2:49"
            },
            "returnParameters": {
              "id": 49489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2053:0:49"
            },
            "scope": 49544,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 49511,
            "nodeType": "FunctionDefinition",
            "src": "2202:126:49",
            "nodes": [],
            "body": {
              "id": 49510,
              "nodeType": "Block",
              "src": "2250:78:49",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 49504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2264:9:49",
                    "subExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 49502,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49486,
                        "src": "2265:6:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 49503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2265:8:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49509,
                  "nodeType": "IfStatement",
                  "src": "2260:62:49",
                  "trueBody": {
                    "id": 49508,
                    "nodeType": "Block",
                    "src": "2275:47:49",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 49505,
                            "name": "ExpectedPause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49452,
                            "src": "2296:13:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 49506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2296:15:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 49507,
                        "nodeType": "RevertStatement",
                        "src": "2289:22:49"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 49499,
              "nodeType": "StructuredDocumentation",
              "src": "2136:61:49",
              "text": " @dev Throws if the contract is not paused."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requirePaused",
            "nameLocation": "2211:14:49",
            "parameters": {
              "id": 49500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2225:2:49"
            },
            "returnParameters": {
              "id": 49501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2250:0:49"
            },
            "scope": 49544,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 49527,
            "nodeType": "FunctionDefinition",
            "src": "2463:115:49",
            "nodes": [],
            "body": {
              "id": 49526,
              "nodeType": "Block",
              "src": "2512:66:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 49519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49517,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49436,
                      "src": "2522:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 49518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2532:4:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2522:14:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49520,
                  "nodeType": "ExpressionStatement",
                  "src": "2522:14:49"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 49522,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49409,
                          "src": "2558:10:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 49523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2558:12:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 49521,
                      "name": "Paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49441,
                      "src": "2551:6:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 49524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2551:20:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49525,
                  "nodeType": "EmitStatement",
                  "src": "2546:25:49"
                }
              ]
            },
            "documentation": {
              "id": 49512,
              "nodeType": "StructuredDocumentation",
              "src": "2334:124:49",
              "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 49515,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 49514,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "2498:13:49"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49469,
                  "src": "2498:13:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "2498:13:49"
              }
            ],
            "name": "_pause",
            "nameLocation": "2472:6:49",
            "parameters": {
              "id": 49513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2478:2:49"
            },
            "returnParameters": {
              "id": 49516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2512:0:49"
            },
            "scope": 49544,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 49543,
            "nodeType": "FunctionDefinition",
            "src": "2710:117:49",
            "nodes": [],
            "body": {
              "id": 49542,
              "nodeType": "Block",
              "src": "2758:69:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 49535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49533,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49436,
                      "src": "2768:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 49534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2778:5:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2768:15:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49536,
                  "nodeType": "ExpressionStatement",
                  "src": "2768:15:49"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 49538,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49409,
                          "src": "2807:10:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 49539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2807:12:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 49537,
                      "name": "Unpaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49446,
                      "src": "2798:8:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 49540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2798:22:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49541,
                  "nodeType": "EmitStatement",
                  "src": "2793:27:49"
                }
              ]
            },
            "documentation": {
              "id": 49528,
              "nodeType": "StructuredDocumentation",
              "src": "2584:121:49",
              "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 49531,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 49530,
                  "name": "whenPaused",
                  "nameLocations": [
                    "2747:10:49"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49477,
                  "src": "2747:10:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "2747:10:49"
              }
            ],
            "name": "_unpause",
            "nameLocation": "2719:8:49",
            "parameters": {
              "id": 49529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2727:2:49"
            },
            "returnParameters": {
              "id": 49532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2758:0:49"
            },
            "scope": 49544,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 49433,
              "name": "Context",
              "nameLocations": [
                "645:7:49"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49427,
              "src": "645:7:49"
            },
            "id": 49434,
            "nodeType": "InheritanceSpecifier",
            "src": "645:7:49"
          }
        ],
        "canonicalName": "Pausable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 49432,
          "nodeType": "StructuredDocumentation",
          "src": "175:439:49",
          "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          49544,
          49427
        ],
        "name": "Pausable",
        "nameLocation": "633:8:49",
        "scope": 49545,
        "usedErrors": [
          49449,
          49452
        ],
        "usedEvents": [
          49441,
          49446
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 49
}